[{"path":"https://lsteinmann.github.io/idaifieldR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://lsteinmann.github.io/idaifieldR/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":[]},{"path":"https://lsteinmann.github.io/idaifieldR/TODO.html","id":"in-general","dir":"","previous_headings":"","what":"In general","title":"TODO","text":"Better structure tests less specialized cases? Update couch-db action bit? See problems _changes etc., different configurations contents. Remove project(name) argument/option everywhere except connect_idaifield() (doesn’t really make much sense.) Fix everything find_layer() simplify… Completely rewrite simplify & utilities…","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/TODO.html","id":"for-v034","dir":"","previous_headings":"","what":"for v0.3.4","title":"TODO","text":"check documentation arguments","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/TODO.html","id":"for-v040-","dir":"","previous_headings":"","what":"for v0.4.0 ?","title":"TODO","text":"Handling geometry work well reconsidered. Maybe importing package like sf storing geometry sf-objects, though seems overkill. keep original JSON-string somehow useable GeoJSON…? remove_config_names() may may overwrite data information unused fields, check & fix , though yet noticed problem. Completely rewrite simplify functions make possible use series lapplys based arguments functions used save lot time. possibility update resources changed since last synch since loading everything excessive large projects.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/TODO.html","id":"for-100","dir":"","previous_headings":"","what":"for 1.0.0","title":"TODO","text":"Getting CRAN-ready: Better structured tests depend DB-connections. Reduced messaging behaviour. Reduced functions, make easier maintain somehow. Clean old code.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/articles/Demo.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"How to use this package: Detailed Workflow","text":"use idaifieldR, ’ll need install GitHub since yet available CRAN. can download current release idaifieldR-GitHub page install file. Alternatively, can use either devtools remotes package install directly GitHub. ’s example installing loading idaifieldR using remotes:","code":"require(remotes) remotes::install_github(\"lsteinmann/idaifieldR\")  library(idaifieldR)"},{"path":"https://lsteinmann.github.io/idaifieldR/articles/Demo.html","id":"loading-the-database-and-creating-an-index","dir":"Articles","previous_headings":"","what":"Loading the Database and Creating an Index","title":"How to use this package: Detailed Workflow","text":"follow along tutorial using data, can load backup file located ‘inst/testdata/rtest.jsonl’ GitHub repository new project called ‘rtest’ Field Client. demo dataset uses slightly customized project configuration demonstrate relevant functions. load complete database create object serve index processing, need create connection object contains information R needs connect Field Desktop database server. can done using following code: code ping database check connection working. using Field Desktop computer, may need serverip argument, defaults common localhost address. Enter password set Field Desktop-Client ‘Tools/Werkzeuge’ > ‘Settings/Einstellungen’: ‘password’/‘Eigenes Passwort’ pwd. project corresponds name project want work . information additional arguments, please see documentation: load complete ‘rtest’-dataset R, can use get_idaifield_docs() function connection object conn created earlier: function retrieves documents project specified conn object stores list called idaifield_test_docs. Note retrieving documents can take time use lot memory, especially larger datasets. loading dataset, can take look contents using View() function RStudio exploring idaifield_test_docs object Environment window. idaifield_test_docs object named nested list custom class idaifield_docs contains one element resource database, reflecting original JSON-structure. name list identifier associated resource. doc$resource sub-list contains actual entry resource, sub-lists contain information changes made resource along basic data, UUID Field Desktop uses internally unique name resource. can use list visualize changes made database entries time axis sorted users, etc., continue utilize idaifieldR’s functions work actual data. check_and_unnest() function idaifieldR can used reduce idaifield_test_docs list resource level. Although step necessary processing, can make data easier work . can use following code apply check_and_unnest() idaifield_test_docs list: information check_and_unnest() arguments, can check documentation using ?check_and_unnest. unnested list contains actual data entered Field Desktop, takes less memory original nested list. can browse object using View(idaifield_test_resources) RStudio, accessing elements idaifield_test_resources$Befund_6_KER_18 see difference. step done automatically idaifieldR functions internally, don’t worry . give quick overview data, can generate index database querying using get_field_index() function connection object conn argument language = \"en\" set language returned index English. index contains basic information object, UUID, identifier, category: using get_field_index() function verbose = TRUE, includes field shortDescription object database. default, tries get English values multi-language fields, can specify preferred language. example, setting language = \"de\" display German language description. selected language exist, function substitute another language. visualize data index, can use ggplot2 pipe-operator dplyr. give us general idea data working .  can see, demo data encompasses variety finds, recorded different “Layers” “Trenches”. get data produce useful plots, now simplify idaifield_test_resources-list.","code":"conn <- connect_idaifield(serverip = \"127.0.0.1\",                            pwd = \"hallo\",                           project = \"rtest\") ?connect_idaifield idaifield_test_docs <- get_idaifield_docs(connection = conn) idaifield_test_resources <- check_and_unnest(idaifield_test_docs) index <- get_field_index(conn,                          verbose = TRUE,                           language = \"en\") head(index) #> The list was already unnested to resource-level. library(dplyr) library(ggplot2)  index %>%   ggplot(aes(y = liesWithin, fill = category)) +    geom_bar()"},{"path":"https://lsteinmann.github.io/idaifieldR/articles/Demo.html","id":"simplify-the-list","dir":"Articles","previous_headings":"","what":"Simplify the List","title":"How to use this package: Detailed Workflow","text":"function simplify_idaifield() takes several arguments control output. can learn documentation (?simplify_idaifield). cases, suffice use defaults pass imported idaifield_docs idaifield_resources list. simplify_idaifield() function provides convenient way simplify format idaifield_docs idaifield_resources list. default, tries use English values multi-language input fields, available, uses next available language alphabetical order. can, course, select language data well. want keep languages multi-language input fields, can set language = \"\". addition, keep_geometry = FALSE removes coordinate information resources. may useful don’t need geographical data want save memory. default, replace_uids set TRUE, replaces UUIDs data corresponding identifiers make readable. Checkbox fields campaign field automatically spread across multiple entries later store multiple columns matrix. behaviour can changed setting spread_fields = FALSE. process entire database simplify_idaifield(), don’t need supply index. function generate index. However, process subset data, need supply index complete database. summary, simplify_idaifield() provides several options control output data extraction. information available options, can consult documentation using ?simplify_idaifield command. list now idaifield_simple class. Browse resulting list clicking Environment-window RStudio use View(idaifield_test_simple). idaifield_...-objects carry connection name project attributes later use. can view attributes(idaifield_test_simple). want analyze data customized way, ’s recommended work directly idaifield_resources-list extract information need. However, prefer matrix format, idaifieldR provides function can convert list matrix. , ’s useful select resources relevant analysis. example, interested pottery, can use idf_select_by() function idaifieldR filter list accordingly. documentation function can found ?idf_select_by:","code":"idaifield_test_simple <- simplify_idaifield(idaifield_test_resources,                                              keep_geometry = FALSE,                                             replace_uids = TRUE,                                              uidlist = index,                                             language = \"en\",                                             spread_fields = TRUE) #> The list was already unnested to resource-level. #> In `find_layer()`: categories considered *Layers* are:  #>   Layer; Grave; Burial; Architecture; Floor; SurveyUnit #>   Supply `layer_categories` argument or change the options-list: getOption(\"idaifield_categories\") pottery <- idf_select_by(idaifield_test_simple, by = \"category\", value = \"Pottery\") #> The list was already unnested to resource-level and simplified."},{"path":"https://lsteinmann.github.io/idaifieldR/articles/Demo.html","id":"queries","dir":"Articles","previous_headings":"","what":"Queries","title":"How to use this package: Detailed Workflow","text":"outcome can achieved querying database directly. See documentation ?idf_index_query, ?idf_query ?idf_json_query. may useful frequently want update data, large amount resources database need small subset: query-functions return idaifield_docs-lists (wish) still need simplify. need supply index uidlist-argument, otherwise UUIDs relations replaced:","code":"pottery_docs <- idf_query(conn,                            field = \"category\",                            value = \"Pottery\") pottery_simple <- simplify_idaifield(pottery_docs, uidlist = index, language = \"en\")"},{"path":"https://lsteinmann.github.io/idaifieldR/articles/Demo.html","id":"transform-the-lists-to-a-matrix-data-frame","dir":"Articles","previous_headings":"","what":"Transform the Lists to a Matrix / data.frame","title":"How to use this package: Detailed Workflow","text":"cases, now idaifield_simple object 37 elements. , turn matrix, directly data.frame make plots easier: viewing resulting Pottery-data frame, notice campaign-field converted multiple columns. custom configuration present can accessed get_configuration(), happen custom checkbox-fields, way conveniently deal fields data frame. can prevent setting spread_field = FALSE simplify_idaifield(). make different better use , try format original list according needs. data frame, can produce basic plots take look distribution periods across layers:  another example:","code":"pottery <- idaifield_as_matrix(pottery) %>%   as.data.frame() #> The list was already unnested to resource-level. pottery %>%   ggplot(aes(x = relation.liesWithin, fill = period)) +    geom_bar() pottery %>%   ggplot(aes(x = vesselForm, fill = specificType)) +    geom_bar()"},{"path":"https://lsteinmann.github.io/idaifieldR/articles/Demo.html","id":"languages","dir":"Articles","previous_headings":"","what":"Languages","title":"How to use this package: Detailed Workflow","text":"currently two functions make easier replace internal names variables translations different languages: Since functions download Language configuration github.com/dainst/idai-field, advise safe result local RDS-file prepared everything. can prepare lookup-table like : get translations Project configuration, can get using get_configuration(). Please note need able connect database order . also give impression lookup-table set : can use manually replace values plots. translations valuelists can currently imported, applies names fields.","code":"core_lang_list <- download_language_list(project = \"core\", language = \"en\") milet_lang_list <- download_language_list(project = \"Milet\", language = \"en\") lookup <- get_language_lookup(core_lang_list, language = \"en\") lookup <- rbind(lookup, get_language_lookup(milet_lang_list, language = \"en\")) config <- get_configuration(conn) lookup_conf <- get_language_lookup(config$languages, language = \"en\") head(lookup_conf)"},{"path":"https://lsteinmann.github.io/idaifieldR/articles/Demo.html","id":"tldr","dir":"Articles","previous_headings":"","what":"TLDR","title":"How to use this package: Detailed Workflow","text":"make long story short sum , two ways can get Pottery-resources R. following lines always necessary: Using following lines default arguments selecting whole database: using following lines direct queries database, see also ?idf_index_query ?idf_json_query:","code":"conn <- connect_idaifield(pwd = \"hallo\", project = \"idaifieldr-demo\") db <- get_idaifield_docs(connection = conn) index <- get_field_index(conn) pottery <- db %>%   idf_select_by(by = \"category\", value = \"Pottery\") %>%   # Note: simplify_idaifield() needs the index of the complete project database    # as a lookup-table to replace all UUIDs with their identifiers   simplify_idaifield(uidlist = index) %>%   idaifield_as_matrix() %>%   as.data.frame() pottery <- idf_query(connection = conn,                      project = \"idaifieldr-demo\",                       field = \"category\",                       value = \"Pottery\") %>%   idaifield_as_matrix() %>%   as.data.frame()"},{"path":"https://lsteinmann.github.io/idaifieldR/articles/TLDR.html","id":"connection-example","dir":"Articles","previous_headings":"","what":"Connection: Example","title":"TLDR: Essential Workflow","text":"","code":"conn <- connect_idaifield(pwd = \"hallo\", project = \"rtest\") db <- get_idaifield_docs(connection = conn) index <- get_uid_list(db)"},{"path":"https://lsteinmann.github.io/idaifieldR/articles/TLDR.html","id":"selection-and-simplify-example","dir":"Articles","previous_headings":"","what":"Selection and Simplify: Example","title":"TLDR: Essential Workflow","text":"Using following lines default arguments selecting whole database:","code":"library(dplyr) pottery <- db %>%   idf_select_by(by = \"category\", value = \"Pottery\") %>%   # Note: simplify_idaifield() needs the index of the complete project database    # as a lookup-table to replace all UUIDs with their identifiers   simplify_idaifield(uidlist = index) %>%   idaifield_as_matrix() %>%   as.data.frame()"},{"path":"https://lsteinmann.github.io/idaifieldR/articles/TLDR.html","id":"query-and-simplify-example","dir":"Articles","previous_headings":"","what":"Query and Simplify: Example","title":"TLDR: Essential Workflow","text":"using following lines direct queries database: See also: ?idf_index_query, ?idf_query ?idf_json_query.","code":"pottery <- idf_query(connection = conn,                      field = \"type\",                       value = \"Pottery\") %>%   simplify_idaifield(uidlist = index) %>%   idaifield_as_matrix() %>%   as.data.frame()"},{"path":"https://lsteinmann.github.io/idaifieldR/articles/TLDR.html","id":"language-lookup-example","dir":"Articles","previous_headings":"","what":"Language Lookup: Example","title":"TLDR: Essential Workflow","text":"Downloading translations converting lookup table:","code":"core_lang_list <- download_language_list(project = \"core\", language = \"de\") pergamon_lang_list <- download_language_list(project = \"Pergamon\", language = \"de\") config_lang_list <- get_configuration(attr(db, \"connection\")) config_lang_list <- config_lang_list$languages  lookup <- get_language_lookup(core_lang_list, language = \"de\") lookup <- rbind(lookup, get_language_lookup(pergamon_lang_list, language = \"de\")) lookup <- rbind(lookup, get_language_lookup(config_lang_list, language = \"de\"))  head(lookup) colnames(pottery)  translated <- colnames(pottery) names(translated) <- lookup$label[match(translated, lookup$var)]  translated"},{"path":"https://lsteinmann.github.io/idaifieldR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Lisa Steinmann. Author, maintainer.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Steinmann L (2025). idaifieldR: Importing Data Field Desktop / iDAI.field R. R package version 0.3.5, https://lsteinmann.github.io/idaifieldR/, https://github.com/lsteinmann/idaifieldR.","code":"@Manual{,   title = {idaifieldR: Importing Data from Field Desktop / iDAI.field into R},   author = {Lisa Steinmann},   year = {2025},   note = {R package version 0.3.5,     https://lsteinmann.github.io/idaifieldR/},   url = {https://github.com/lsteinmann/idaifieldR}, }"},{"path":"https://lsteinmann.github.io/idaifieldR/index.html","id":"idaifieldr-","dir":"","previous_headings":"","what":"Importing Data from Field Desktop / iDAI.field into R","title":"Importing Data from Field Desktop / iDAI.field into R","text":"R-package idaifieldR imports data iDAI.field 2 / Field Desktop database R without hassle CSV-exports. package uses CouchDB-API connect running Field Desktop client store entire database (just subset) list right R’s memory. idaifieldR, can update data --fly flexibly re-run R-script. addition importing data, idaifieldR also offers formatting enhance processing R. relevant functions replace UUIDs corresponding identifiers, unnest lists, reformat geometry compatible , e.g., sp-package. information, check Demo-Vignette. ’s worth noting processing resources larger databases can time-consuming memory-intensive, recommend processing subsets actually needed analyses.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/index.html","id":"key-features","dir":"","previous_headings":"","what":"Key Features","title":"Importing Data from Field Desktop / iDAI.field into R","text":"Import running iDAI.field 2 3 (Field Desktop) client R Query , get complete project database R Automatically format data easier processing Get metadata creation modification dates user Just like anything done R: easily re-run analyses data changed!","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/index.html","id":"dependencies","dir":"","previous_headings":"","what":"Dependencies","title":"Importing Data from Field Desktop / iDAI.field into R","text":"idaifieldR needs syncing iDAI.field/Field Desktop-Client computer network work. , package depends crul jsonlite, available CRAN automatically installed dependencies.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Importing Data from Field Desktop / iDAI.field into R","text":"can install current version idaifieldR GitHub using devtools remotes:","code":"devtools::install_github(\"lsteinmann/idaifieldR\", build_vignettes = TRUE) # OR remotes::install_github(\"lsteinmann/idaifieldR\", build_vignettes = TRUE)"},{"path":"https://lsteinmann.github.io/idaifieldR/index.html","id":"basic-workflow-example","dir":"","previous_headings":"","what":"Basic Workflow Example","title":"Importing Data from Field Desktop / iDAI.field into R","text":"demonstration package uses included paper “R wie : Reproduzierbar. Auswertung von Daten aus Field Desktop mit idaifieldR” published Forum Digital Archaeology Infrastructure (2023, DOI: 10.34780/068b-q6c7) corresponding supplement. Alternatively, can check Demo.Rmd-vignette (browseVignettes(\"idaifieldR\")) TLDR.Rmd-vignette shorter overview. First, connect “rtest” project using connect_idaifield() retrieve index resources using get_field_index(). Next, import resources database single list lists using get_idaifield_docs(). provides metadata changes users, can slow use lot memory. Alternatively, can query database directly using idf_query() retrieve resources need, resources “pottery” category. importing data, use simplify_idaifield() transform nested list usable format, replacing UUIDs identifiers converting dating fields minimum maximum values. configuration available, variables checkbox-fields also converted multiple columns boolean values. Lastly, can use idaifield_as_matrix() produce matrix row represents resource column represents field checkbox value. matrix can easily converted data.frame analysis:","code":"library(idaifieldR) # Connect to iDAI.field: conn <- connect_idaifield(pwd = \"hallo\", project = \"rtest\")  # Get an index of the projects database: index <- get_field_index(conn)  # Get all docs from the projects database: idaifield_docs <- get_idaifield_docs(conn)  # Get only the docs of category \"Pottery\" from the database: pottery <- idf_query(conn, field = \"category\", value = \"Pottery\")  # Simplify the nested list:  pottery <- simplify_idaifield(pottery, uidlist = index)  # Convert it into a matrix: pottery_mat <- idaifield_as_matrix(pottery)  # Look at the result: View(pottery_mat)"},{"path":"https://lsteinmann.github.io/idaifieldR/index.html","id":"contribution","dir":"","previous_headings":"","what":"Contribution","title":"Importing Data from Field Desktop / iDAI.field into R","text":"constantly use work, improving package trying stay --date everything go. special thanks goes ChatGPT helping lot documentation. Much code rather old reflects learning process much good practice. However, happy feedback – form issues feature requests – even happier anyone like collaborate project. interested contributing idaifieldR, feel free get touch – don’t, just fork ! ;)","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/bce_ce.html","id":null,"dir":"Reference","previous_headings":"","what":"Translate a Dating Value from iDAI.field to a Positive or Negative Number — bce_ce","title":"Translate a Dating Value from iDAI.field to a Positive or Negative Number — bce_ce","text":"function takes list containing numerical year type dating (either \"bce\", \"ce\", \"bp\") returns year number positive negative sign indicating whether year BCE CE. dating type \"bp\", year subtracted 1950 get BCE year.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/bce_ce.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translate a Dating Value from iDAI.field to a Positive or Negative Number — bce_ce","text":"","code":"bce_ce(list)"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/bce_ce.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translate a Dating Value from iDAI.field to a Positive or Negative Number — bce_ce","text":"list named list containing least following elements: inputYear numerical value representing year. inputType character string indicating type dating inputYear value. Must one \"bce\", \"ce\", \"bp\".","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/bce_ce.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Translate a Dating Value from iDAI.field to a Positive or Negative Number — bce_ce","text":"numerical value representing year, negative sign indicating BCE positive sign indicating CE. warning attribute carries possible warnings.","code":""},{"path":[]},{"path":"https://lsteinmann.github.io/idaifieldR/reference/bce_ce.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Translate a Dating Value from iDAI.field to a Positive or Negative Number — bce_ce","text":"","code":"if (FALSE) { # \\dontrun{ list <- list(inputYear = 100, inputType = \"bce\") bce_ce(list) } # }"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/check_and_unnest.html","id":null,"dir":"Reference","previous_headings":"","what":"Check and Unnest an idaifield_docs-list — check_and_unnest","title":"Check and Unnest an idaifield_docs-list — check_and_unnest","text":"Checks input object idaifield_docs-list, already unnested (.e., class idaifield_resources idaifield_simple). object unnested, function unnests stripping top-level lists returning list called \"resource\" within db docs. input object processed idaifield_docs unnested idaifield_resources idaifield_simple object, function issues warning returns object. may force function process anyway using force = TRUE, outcome uncertain.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/check_and_unnest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check and Unnest an idaifield_docs-list — check_and_unnest","text":"","code":"check_and_unnest(idaifield_docs, force = FALSE)"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/check_and_unnest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check and Unnest an idaifield_docs-list — check_and_unnest","text":"idaifield_docs object class idaifield_docs processed. force TRUE/FALSE. function attempt unnest input object regardless type class? Default FALSE.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/check_and_unnest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check and Unnest an idaifield_docs-list — check_and_unnest","text":"already unnested, object handed . , list top-level lists removed \"resource\"-level.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/check_and_unnest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check and Unnest an idaifield_docs-list — check_and_unnest","text":"","code":"if (FALSE) { # \\dontrun{ conn <- connect_idaifield(pwd = \"hallo\", project = \"rtest\") idaifield_docs <- get_idaifield_docs(conn, raw = TRUE)  # Check if idaifield_docs is already unnested, and if not, do so: idaifield_docs <- check_and_unnest(idaifield_docs) } # }"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/check_for_sublist.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks if a list has sub-lists and returns TRUE if so — check_for_sublist","title":"Checks if a list has sub-lists and returns TRUE if so — check_for_sublist","text":"Checks list sub-lists returns TRUE ","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/check_for_sublist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks if a list has sub-lists and returns TRUE if so — check_for_sublist","text":"","code":"check_for_sublist(single_resource_field)"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/check_for_sublist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks if a list has sub-lists and returns TRUE if so — check_for_sublist","text":"single_resource_field list checked","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/check_for_sublist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks if a list has sub-lists and returns TRUE if so — check_for_sublist","text":"TRUE/FALSE","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/check_for_sublist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Checks if a list has sub-lists and returns TRUE if so — check_for_sublist","text":"","code":"if (FALSE) { # \\dontrun{ list <- list(1, 2, 3, list(\"börek\", 2, 3))  check_for_sublist(list) } # }"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/check_idaifieldr_version.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Version of idaifieldR — check_idaifieldr_version","title":"Check Version of idaifieldR — check_idaifieldr_version","text":"Checks new version idaifieldR available (runs attach).","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/check_idaifieldr_version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Version of idaifieldR — check_idaifieldr_version","text":"","code":"check_idaifieldr_version(installed_version = getNamespaceVersion(\"idaifieldR\"))"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/check_idaifieldr_version.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Version of idaifieldR — check_idaifieldr_version","text":"installed_version version idaifieldR currently use","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/check_idaifieldr_version.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Version of idaifieldR — check_idaifieldr_version","text":"TRUE current release used, FALSE .","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/check_idaifieldr_version.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check Version of idaifieldR — check_idaifieldr_version","text":"","code":"if (FALSE) { # \\dontrun{ check_idaifieldr_version(packageVersion('idaifieldR')) } # }"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/check_if_idaifield.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for idaifield_... classes — check_if_idaifield","title":"Check for idaifield_... classes — check_if_idaifield","text":"internal use... checks object can actually processed functions package need specific format returned core function get_idaifield_docs(...).","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/check_if_idaifield.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for idaifield_... classes — check_if_idaifield","text":"","code":"check_if_idaifield(testobject)"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/check_if_idaifield.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for idaifield_... classes — check_if_idaifield","text":"testobject object evaluated.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/check_if_idaifield.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for idaifield_... classes — check_if_idaifield","text":"matrix allows functions determine type list object ","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/check_if_idaifield.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for idaifield_... classes — check_if_idaifield","text":"","code":"if (FALSE) { # \\dontrun{ idaifield_docs <- get_idaifield_docs(projectname = \"rtest\", connection = connect_idaifield(serverip = \"127.0.0.1\", user = \"R\", pwd = \"password\"))  check_if_idaifield(idaifield_docs) } # }"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/check_if_uid.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the vector/object is a UUID — check_if_uid","title":"Check if the vector/object is a UUID — check_if_uid","text":"Check vector/object UUID","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/check_if_uid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the vector/object is a UUID — check_if_uid","text":"","code":"check_if_uid(string)"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/check_if_uid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the vector/object is a UUID — check_if_uid","text":"string character string vector character strings checked UID used iDAI.field 2 / Field Desktop","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/check_if_uid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the vector/object is a UUID — check_if_uid","text":"vector length string containing TRUE corresponding item string UID, FALSE ","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/check_if_uid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if the vector/object is a UUID — check_if_uid","text":"","code":"if (FALSE) { # \\dontrun{ check_if_uid(string = \"0324141a-8201-c5dc-631b-4dded4552ac4\") check_if_uid(string = \"not a uid\") } # }"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/connect_idaifield.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect to an iDAI.field / Field Desktop Client — connect_idaifield","title":"Connect to an iDAI.field / Field Desktop Client — connect_idaifield","text":"function establishes connection database iDAI.field / Field Desktop Client, returns connection object containing necessary information functions access database, get_idaifield_docs(), idf_query(), idf_index_query(), idf_json_query().","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/connect_idaifield.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect to an iDAI.field / Field Desktop Client — connect_idaifield","text":"","code":"connect_idaifield(   serverip = \"127.0.0.1\",   project = NULL,   user = \"R\",   pwd = \"password\",   version = 3,   ping = TRUE )"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/connect_idaifield.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect to an iDAI.field / Field Desktop Client — connect_idaifield","text":"serverip IP address Field Client. using Field Desktop machine, default value (127.0.0.1) usually work. project (required) name project want work . list available projects, see idf_projects(). user (optional) username connection. parameter currently needed. pwd (required) password used authenticate Field Client (default \"password\"). version version number Field Client. default, value set 3. ping logical. Whether test connection creation (default TRUE). TRUE, connect_idaifield() also checks project exists.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/connect_idaifield.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Connect to an iDAI.field / Field Desktop Client — connect_idaifield","text":"connect_idaifield() returns idf_connection_settings object contains connection settings needed connect database iDAI.field / Field Desktop Client.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/connect_idaifield.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Connect to an iDAI.field / Field Desktop Client — connect_idaifield","text":"default, using Field Desktop machine, need specify serverip argument, defaults common localhost address. Similarly, user argument currently needed access. pwd argument needs set password set Field Desktop Client Tools/Werkzeuge > Settings/Einstellungen: 'password'/'Eigenes Passwort'. default serverip argument work , want access client network running machine R, can exchange address listed password (without port (':3000')). version argument need specified using current version Field Desktop (3), help connect using iDAI.field 2. can set project want work function, aware functions overwrite setting supply project name . connect_idaifield() check project actually exists throw error .","code":""},{"path":[]},{"path":"https://lsteinmann.github.io/idaifieldR/reference/connect_idaifield.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Connect to an iDAI.field / Field Desktop Client — connect_idaifield","text":"","code":"if (FALSE) { # \\dontrun{ conn <- connect_idaifield(   serverip = \"127.0.0.1\",   user = \"R\",   pwd = \"hallo\",   project = \"rtest\" )  conn$status  idf_ping(conn) } # }"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/convert_to_coordmat.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts Coordinate List from iDAI.field to a Matrix — convert_to_coordmat","title":"Converts Coordinate List from iDAI.field to a Matrix — convert_to_coordmat","text":"Converts Coordinate List iDAI.field Matrix","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/convert_to_coordmat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts Coordinate List from iDAI.field to a Matrix — convert_to_coordmat","text":"","code":"convert_to_coordmat(coordinates)"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/convert_to_coordmat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts Coordinate List from iDAI.field to a Matrix — convert_to_coordmat","text":"coordinates list format coordinates list iDAI.field 2 / Field Desktop database.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/convert_to_coordmat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts Coordinate List from iDAI.field to a Matrix — convert_to_coordmat","text":"matrix displays coordinates.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/convert_to_coordmat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Converts Coordinate List from iDAI.field to a Matrix — convert_to_coordmat","text":"","code":"if (FALSE) { # \\dontrun{ test_2 <- list(type = \"Polygon\", coordinates = list(list(list(1), list(1)), list(list(1), list(2)), list(list(2), list(2)), list(list(1), list(1))))  convert_polygon(test_2$coordinates) } # }"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/convert_to_onehot.html","id":null,"dir":"Reference","previous_headings":"","what":"Break down a List from a Checkbox Field to Onehot-Coded Values — convert_to_onehot","title":"Break down a List from a Checkbox Field to Onehot-Coded Values — convert_to_onehot","text":"function helper function simplify_idaifield() takes list one fields marked config containing checkboxes converts list onehot-coded values.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/convert_to_onehot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Break down a List from a Checkbox Field to Onehot-Coded Values — convert_to_onehot","text":"","code":"convert_to_onehot(resource, fieldtypes)"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/convert_to_onehot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Break down a List from a Checkbox Field to Onehot-Coded Values — convert_to_onehot","text":"resource resource process (idaifield_resources-list). fieldtypes matrix fields given inputType returned get_field_inputtypes()","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/convert_to_onehot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Break down a List from a Checkbox Field to Onehot-Coded Values — convert_to_onehot","text":"resource object values checkboxes separated one-hot-coded versions.","code":""},{"path":[]},{"path":"https://lsteinmann.github.io/idaifieldR/reference/convert_to_onehot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Break down a List from a Checkbox Field to Onehot-Coded Values — convert_to_onehot","text":"","code":"if (FALSE) { # \\dontrun{ ... } # }"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/dot-onLoad.html","id":null,"dir":"Reference","previous_headings":"","what":"onLoad / onAttach — .onLoad","title":"onLoad / onAttach — .onLoad","text":"onLoad / onAttach","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/dot-onLoad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"onLoad / onAttach — .onLoad","text":"","code":".onLoad(lib, pkg)"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/dot-onLoad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"onLoad / onAttach — .onLoad","text":"lib name library. pkg name package.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/download_language_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Download a Language-List from GitHub — download_language_list","title":"Download a Language-List from GitHub — download_language_list","text":"function downloads language lists iDAI.field-GitHub-repository can used supply additional lists get_language_lookup().","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/download_language_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download a Language-List from GitHub — download_language_list","text":"","code":"download_language_list(project = \"core\", language = \"en\")"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/download_language_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download a Language-List from GitHub — download_language_list","text":"project name project language files downloaded; case sensitive! match name Language-file exactly. default (\"core\") used, common language file core library downloaded. language Language short name extracted, e.g. \"en\", defaults \"en\"","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/download_language_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download a Language-List from GitHub — download_language_list","text":"list can processed get_language_lookup().","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/download_language_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download a Language-List from GitHub — download_language_list","text":"","code":"if (FALSE) { # \\dontrun{ lang_list <- download_language_list(language = \"de\") get_language_lookup(lang_list) } # }"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/extract_field_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a data.frame from a list of labels and descriptions from iDAI.field — extract_field_names","title":"Create a data.frame from a list of labels and descriptions from iDAI.field — extract_field_names","text":"Helper get_language_lookup()","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/extract_field_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a data.frame from a list of labels and descriptions from iDAI.field — extract_field_names","text":"","code":"extract_field_names(fields_list)"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/extract_field_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a data.frame from a list of labels and descriptions from iDAI.field — extract_field_names","text":"fields_list named list contains one two named lists (\"label\" \"description\") translation / display language respective internal value (.e. name list) language","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/extract_field_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a data.frame from a list of labels and descriptions from iDAI.field — extract_field_names","text":"data frame column \"var\" \"label\" containing value var respective translation / display value \"label\"","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/extract_field_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a data.frame from a list of labels and descriptions from iDAI.field — extract_field_names","text":"","code":"if (FALSE) { # \\dontrun{ fields_list <- list(\"category\" = list(\"label\" = \"Category\"),                     \"identifier\" = list(\"label\" = \"Name / ID (unique)\",                     \"description\" = \"Description of the field\")) df <- extract_field_names(fields_list) } # }"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/find_categories.html","id":null,"dir":"Reference","previous_headings":"","what":"returns the category of the ids (UUID/identifier) — find_categories","title":"returns the category of the ids (UUID/identifier) — find_categories","text":"returns category ids (UUID/identifier)","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/find_categories.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"returns the category of the ids (UUID/identifier) — find_categories","text":"","code":"find_categories(ids, uidlist, id_type)"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/find_categories.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"returns the category of the ids (UUID/identifier) — find_categories","text":"uidlist data.frame returned get_field_index() get_uid_list(). id_type One \"identifier\" \"UID\" - function use identifiers UUIDs find layer?","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/find_categories.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"returns the category of the ids (UUID/identifier) — find_categories","text":"vector categories resource","code":""},{"path":[]},{"path":"https://lsteinmann.github.io/idaifieldR/reference/find_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the Layer a Resource is Contained in — find_layer","title":"Find the Layer a Resource is Contained in — find_layer","text":"Helper simplify_idaifield(). Traces liesWithin fields find one Layer returns corresponding identifier.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/find_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the Layer a Resource is Contained in — find_layer","text":"","code":"find_layer(   ids,   uidlist = NULL,   layer_categories = NULL,   max_depth = 20,   silent = FALSE,   id = NULL,   id_type = NULL )"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/find_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the Layer a Resource is Contained in — find_layer","text":"ids Either UUIDs identifiers resources idaifield_...-list returned get_idaifield_docs(), idf_query(), idf_index_query() idf_json_query(). uidlist data.frame returned get_field_index() get_uid_list(). layer_categories vector categories classified Layers. (Encompasses SurveyUnit.) See change default: getOption(\"idaifield_categories\")$layers max_depth numeric. Maximum number recursive iterations / maximum depth resource may nested layer. silent TRUE/FALSE, default: FALSE. messages suppressed? id DEPRECATED. Either UUID identifier resource idaifield_...-list returned get_idaifield_docs(), idf_query(), idf_index_query() idf_json_query(). id_type DEPRECATED.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/find_layer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the Layer a Resource is Contained in — find_layer","text":"identifier UUID first \"Layer\"-category resource given id/identifier lies within.","code":""},{"path":[]},{"path":"https://lsteinmann.github.io/idaifieldR/reference/find_layer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find the Layer a Resource is Contained in — find_layer","text":"","code":"if (FALSE) { # \\dontrun{ conn <- connect_idaifield(pwd = \"hallo\", project = \"rtest\") index <- get_field_index(conn)   # For a nested Find: index[which(index$identifier == \"Befund_1_InschriftAufMünze\"), ] find_layer(\"Befund_1_InschriftAufMünze\", index)  # For all resources: find_layer(index$identifier, index) } # }"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/find_parent_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"takes and returns a parent list recursively until as much as possible is solved — find_parent_layer","title":"takes and returns a parent list recursively until as much as possible is solved — find_parent_layer","text":"takes returns parent list recursively much possible solved","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/find_parent_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"takes and returns a parent list recursively until as much as possible is solved — find_parent_layer","text":"","code":"find_parent_layer(   parent_list,   uidlist,   id_type,   layer_categories,   max_depth = 20 )"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/find_parent_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"takes and returns a parent list recursively until as much as possible is solved — find_parent_layer","text":"parent_list list solved unsolved resources uidlist data.frame returned get_field_index() get_uid_list(). id_type One \"identifier\" \"UID\" - function use identifiers UUIDs find layer? layer_categories vector categories classified Layers. (Encompasses SurveyUnit.) See change default: getOption(\"idaifield_categories\")$layers max_depth numeric. Maximum number recursive iterations / maximum depth resource may nested layer.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/find_parent_layer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"takes and returns a parent list recursively until as much as possible is solved — find_parent_layer","text":"list solved unsolved resources","code":""},{"path":[]},{"path":"https://lsteinmann.github.io/idaifieldR/reference/find_parents.html","id":null,"dir":"Reference","previous_headings":"","what":"returns the UUID/identifier of the resources the 'ids' are contained in — find_parents","title":"returns the UUID/identifier of the resources the 'ids' are contained in — find_parents","text":"returns UUID/identifier resources 'ids' contained ","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/find_parents.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"returns the UUID/identifier of the resources the 'ids' are contained in — find_parents","text":"","code":"find_parents(ids, uidlist, id_type)"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/find_parents.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"returns the UUID/identifier of the resources the 'ids' are contained in — find_parents","text":"uidlist data.frame returned get_field_index() get_uid_list(). id_type One \"identifier\" \"UID\" - function use identifiers UUIDs find layer?","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/find_parents.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"returns the UUID/identifier of the resources the 'ids' are contained in — find_parents","text":"vector resources id located","code":""},{"path":[]},{"path":"https://lsteinmann.github.io/idaifieldR/reference/find_resource.html","id":null,"dir":"Reference","previous_headings":"","what":"Finding the ","title":"Finding the ","text":"Finding \"resource\"-list CouchDB-output","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/find_resource.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Finding the ","text":"","code":"find_resource(list)"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/find_resource.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Finding the ","text":"list list formatted CouchDB-JSON-output","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/find_resource.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Finding the ","text":"list resource-lists","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/find_resource.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Finding the ","text":"","code":"if (FALSE) { # \\dontrun{ testlist <- list(docs = list(list(resource = list(test = \"test\",                                                   test2 = \"test2\")),                              list(resource = list(test = \"test\",                                                   test2 = \"test2\"))),                  warning = \"warning\") find_resource(testlist) } # }"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/fix_dating.html","id":null,"dir":"Reference","previous_headings":"","what":"Reduce the Dating-list to min/max-Values — fix_dating","title":"Reduce the Dating-list to min/max-Values — fix_dating","text":"Reformats \"dating\"-list resource idaifield_docs- idaifield_resources-list contain min max dating additional info well original values \"comment\"-element.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/fix_dating.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reduce the Dating-list to min/max-Values — fix_dating","text":"","code":"fix_dating(dat_list, use_exact_dates = FALSE)"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/fix_dating.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reduce the Dating-list to min/max-Values — fix_dating","text":"dat_list \"dating\"-list resource idaifield_docs- idaifield_resources-list. use_exact_dates TRUE/FALSE: TRUE \"exact\" dating type present, sets min max dating value exact dating. Default FALSE.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/fix_dating.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reduce the Dating-list to min/max-Values — fix_dating","text":"reformatted list containing min max dating additional information well original values \"comment\"-element. use_exact_dates = TRUE contains value exact dating dating.min dating.max.","code":""},{"path":[]},{"path":"https://lsteinmann.github.io/idaifieldR/reference/fix_dating.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reduce the Dating-list to min/max-Values — fix_dating","text":"","code":"if (FALSE) { # \\dontrun{ dat_list <- list(list(type = \"range\",                      begin = list(inputYear = 2000, inputType = \"bce\"),                      end = list(inputYear = 2000, inputType = \"ce\")),                 list(type = \"exact\",                      begin = list(inputYear = 130, inputType = \"bce\"),                      end = list(inputYear = 130, inputType = \"bce\"))) # Use the true min/max dating: fix_dating(dat_list) # use the available exact dating: fix_dating(dat_list, use_exact_dates = TRUE) } # }"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/fix_relations.html","id":null,"dir":"Reference","previous_headings":"","what":"Unnest the Relations in a Resource and Replace the UUIDs with identifiers — fix_relations","title":"Unnest the Relations in a Resource and Replace the UUIDs with identifiers — fix_relations","text":"function flatten relations list non-nested lists relation.-prefix replace UUIDs lists values corresponding identifiers uidlist/index (see get_field_index() get_uid_list()) using replace_uid() make result readable.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/fix_relations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unnest the Relations in a Resource and Replace the UUIDs with identifiers — fix_relations","text":"","code":"fix_relations(resource, replace_uids = TRUE, uidlist = NULL)"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/fix_relations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unnest the Relations in a Resource and Replace the UUIDs with identifiers — fix_relations","text":"resource One element list class idaifield_resources. replace_uids TRUE/FALSE. TRUE, replaces UUIDs relation corresponding identifiers. FALSE, just flattens list. Default TRUE. uidlist needs provided replace_uids = TRUE. data.frame returned get_uid_list() get_field_index().","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/fix_relations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unnest the Relations in a Resource and Replace the UUIDs with identifiers — fix_relations","text":"resource relations unnested (replaced identifiers replace_uids set TRUE).","code":""},{"path":[]},{"path":"https://lsteinmann.github.io/idaifieldR/reference/fix_relations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Unnest the Relations in a Resource and Replace the UUIDs with identifiers — fix_relations","text":"","code":"if (FALSE) { # \\dontrun{ index <- data.frame(   identifier = c(\"name1\", \"name2\"),   UID = c(\"15754929-dd98-acfa-bfc2-016b4d5582fe\",           \"bf06c7b0-dba0-dcfa-6d8e-3b3509fee5b6\")  ) resource <- list(relations = list(     isRecordedIn = list(\"15754929-dd98-acfa-bfc2-016b4d5582fe\"),     liesWithin = list(\"bf06c7b0-dba0-dcfa-6d8e-3b3509fee5b6\")   ),   identifier = \"res_1\" )  new_relations_list <- fix_relations(resource, replace_uids = TRUE, uidlist = index) new_relations_list  new_relations_list <- fix_relations(resource, replace_uids = FALSE) new_relations_list } # }"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/gather_languages.html","id":null,"dir":"Reference","previous_headings":"","what":"Gather Fields with Multiple Language Values — gather_languages","title":"Gather Fields with Multiple Language Values — gather_languages","text":"function extracts values preferred language list containing values multiple languages.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/gather_languages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gather Fields with Multiple Language Values — gather_languages","text":"","code":"gather_languages(input_list, language = \"all\", silent = FALSE)"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/gather_languages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gather Fields with Multiple Language Values — gather_languages","text":"input_list list character values containing () sublists language. language short name (e.g. \"en\", \"de\", \"fr\") language preferred fields. Special value \"\" (default) can used return concatenated string available languages. gather_languages() select available languages alphabetical order selected language available. silent TRUE/FALSE: gather_languages() issue messages warnings?","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/gather_languages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gather Fields with Multiple Language Values — gather_languages","text":"character vector containing values preferred language.","code":""},{"path":[]},{"path":"https://lsteinmann.github.io/idaifieldR/reference/gather_languages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gather Fields with Multiple Language Values — gather_languages","text":"","code":"if (FALSE) { # \\dontrun{ input_list <- list(list(\"en\" = \"English text\", \"de\" = \"Deutscher Text\"),                    list(\"en\" = \"Another english text\", \"de\" = \"Weiterer dt. Text\")) gather_languages(input_list, language = \"de\") } # }"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/gather_trenches.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a vector of Place-resources each element from the index is located in — gather_trenches","title":"Get a vector of Place-resources each element from the index is located in — gather_trenches","text":"Get vector Place-resources element index located ","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/gather_trenches.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a vector of Place-resources each element from the index is located in — gather_trenches","text":"","code":"gather_trenches(uidlist)"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/gather_trenches.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a vector of Place-resources each element from the index is located in — gather_trenches","text":"uidlist returned get_uid_list() get_field_index()","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/gather_trenches.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a vector of Place-resources each element from the index is located in — gather_trenches","text":"vector containing Place resource located ","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/gather_trenches.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a vector of Place-resources each element from the index is located in — gather_trenches","text":"","code":"if (FALSE) { # \\dontrun{ uidlist$Place <- gather_trenches(uidlist) } # }"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/get_configuration.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the Custom Project Configuration as Stored in the Project Database — get_configuration","title":"Get the Custom Project Configuration as Stored in the Project Database — get_configuration","text":"function retrieves project configuration (existent) iDAI.field project. list contain fields valuelists edited project configuration editor iDAI.field 3 (Field Desktop) encompass fields, valuelists translation added update iDAI.field 3.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/get_configuration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the Custom Project Configuration as Stored in the Project Database — get_configuration","text":"","code":"get_configuration(connection, projectname = NULL)"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/get_configuration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the Custom Project Configuration as Stored in the Project Database — get_configuration","text":"connection connection object returned connect_idaifield() projectname (deprecated) name project Field Client one wishes load. overwrite project argument set connect_idaifield().","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/get_configuration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the Custom Project Configuration as Stored in the Project Database — get_configuration","text":"list containing project configuration; NA configuration found connection failed.","code":""},{"path":[]},{"path":"https://lsteinmann.github.io/idaifieldR/reference/get_configuration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the Custom Project Configuration as Stored in the Project Database — get_configuration","text":"","code":"if (FALSE) { # \\dontrun{ conn <- connect_idaifield(serverip = \"127.0.0.1\", user = \"R\", pwd = \"hallo\", project = \"rtest\") config <- get_configuration(connection = conn, projectname = \"rtest\") } # }"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/get_field_index.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the Index of an iDAI.field / Field Desktop Database — get_field_index","title":"Get the Index of an iDAI.field / Field Desktop Database — get_field_index","text":"resources project databases iDAI.field / Field Desktop stored referenced Universally Unique Identifier (UUID) relations fields. Therefore, many purposes lookup-table needs provided order get actual identifiers resources referenced. Single UUIDs vectors UUIDs can replaced individually using replace_uid() package. function also good quick overview / list resources exist along identifiers short descriptions can used select resources along respective Categories (e.g. Pottery, Layer etc., formerly names \"types\"). Please note case internal names everything used. relabeled Trench Schnitt language-configuration, name still Trench . None functions respect language settings project configuration, .e. front end languages valuelists fields displayed, instead background names used. can see project configuration settings.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/get_field_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the Index of an iDAI.field / Field Desktop Database — get_field_index","text":"","code":"get_field_index(   connection,   verbose = FALSE,   gather_trenches = FALSE,   remove_config_names = TRUE,   find_layers = FALSE,   language = \"all\" )"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/get_field_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the Index of an iDAI.field / Field Desktop Database — get_field_index","text":"connection object returned connect_idaifield() verbose TRUE FALSE. Defaults FALSE. TRUE returns list including identifier shortDescription convenient read, FALSE returns UUID, category (former: type) basic relations, sufficient internal use. gather_trenches defaults FALSE. TRUE, adds another column records Place corresponding Trench sub-resources lie within. (Useful grouping finds several trenches, work project database organized accordingly.) remove_config_names TRUE/FALSE: name project removed field names configuration? (Default TRUE.) (e.g.: test:amount renamed amount, see remove_config_names().) find_layers TRUE/FALSE. Default FALSE. TRUE, adds another column 'Layer' (see getOption(\"idaifield_categories\")$layers, can modified) resource contained  recursively. means even immediately lie within layer, contained one several resources said layer, new column (\"liesWithinLayer\") still show layer. Example: sample \"\" Find \"001\" layer \"Layer1\" usually \"001\" value \"liesWithin\". find_layers, another column called \"liesWithinLayer\" contains \"Layer1\" sample \"\" Find \"001\". language short name (e.g. \"en\", \"de\", \"fr\") language preferred fields. Special value \"\" (default) can used return concatenated string available languages. gather_languages() select available languages alphabetical order selected language available.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/get_field_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the Index of an iDAI.field / Field Desktop Database — get_field_index","text":"data.frame identifiers corresponding UUIDs along category (former: type), basic relations depending settings place shortDescription element","code":""},{"path":[]},{"path":"https://lsteinmann.github.io/idaifieldR/reference/get_field_index.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the Index of an iDAI.field / Field Desktop Database — get_field_index","text":"","code":"if (FALSE) { # \\dontrun{ connection <- connect_idaifield(pwd = \"hallo\", project = \"rtest\")  index <- get_field_index(connection, verbose = TRUE) } # }"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/get_field_inputtypes.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce a Matrix of Field inputTypes from the Custom Project Configuration — get_field_inputtypes","title":"Produce a Matrix of Field inputTypes from the Custom Project Configuration — get_field_inputtypes","text":"function retrieves matrix containing inputTypes custom fields project configuration iDAI.field project.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/get_field_inputtypes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce a Matrix of Field inputTypes from the Custom Project Configuration — get_field_inputtypes","text":"","code":"get_field_inputtypes(   config,   inputType = \"all\",   remove_config_names = TRUE,   silent = FALSE )"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/get_field_inputtypes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce a Matrix of Field inputTypes from the Custom Project Configuration — get_field_inputtypes","text":"config configuration list returned get_configuration() inputType specified, matrix filtered return specified type. remove_config_names TRUE/FALSE: name project removed field names configuration? (Default TRUE.) (e.g.: test:amount renamed amount, see remove_config_names().) silent TRUE/FALSE, default: FALSE. messages suppressed?","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/get_field_inputtypes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce a Matrix of Field inputTypes from the Custom Project Configuration — get_field_inputtypes","text":"matrix fields (given inputType).","code":""},{"path":[]},{"path":"https://lsteinmann.github.io/idaifieldR/reference/get_field_inputtypes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Produce a Matrix of Field inputTypes from the Custom Project Configuration — get_field_inputtypes","text":"","code":"if (FALSE) { # \\dontrun{ conn <- connect_idaifield(serverip = \"127.0.0.1\",                           pwd = \"hallo\",                           project = \"rtest\") config <- get_configuration(connection = conn) checkboxes <- get_field_inputtypes(config, inputType = \"checkboxes\") } # }"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/get_idaifield_docs.html","id":null,"dir":"Reference","previous_headings":"","what":"Import all docs from an iDAI.field / Field Desktop project — get_idaifield_docs","title":"Import all docs from an iDAI.field / Field Desktop project — get_idaifield_docs","text":"Imports docs iDAI.Field-database currently running syncing list-object processing R. function useful import iDAI.field 2 Field Desktop respective client running computer network R-script.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/get_idaifield_docs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import all docs from an iDAI.field / Field Desktop project — get_idaifield_docs","text":"","code":"get_idaifield_docs(   connection = connect_idaifield(serverip = \"127.0.0.1\", project = \"rtest\", user = \"R\",     pwd = \"hallo\"),   raw = TRUE,   json = FALSE,   projectname = NULL )"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/get_idaifield_docs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import all docs from an iDAI.field / Field Desktop project — get_idaifield_docs","text":"connection connection object returned connect_idaifield() raw TRUE/FALSE. result already unnested resource level using check_and_unnest()? (Default FALSE.) json TRUE/FALSE. function return JSON-character string? (Default FALSE.) TRUE output processed functions package. Can parsed using e.g. jsonlite::fromJSON(). projectname (deprecated) name project Field Client one wishes load. overwrite project set connection-object. See idf_projects() available projects.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/get_idaifield_docs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import all docs from an iDAI.field / Field Desktop project — get_idaifield_docs","text":"object (list) class idaifield_docs raw = TRUE idaifield_resources raw = FALSE contains docs/resources selected project except project configuration. connection projectname attached attributes later use. (json = TRUE, returns character string JSON-format.)","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/get_idaifield_docs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import all docs from an iDAI.field / Field Desktop project — get_idaifield_docs","text":"using raw = TRUE (default) function allow get change log resource, .e. user changed something resource time created . Setting raw = FALSE return list actual data. can later time using check_and_unnest() package. NOTE: planning using coordinates stored database, strongly suggest consider changing R digits-setting higher value default. Depending projection used, coordinates may represented rather long numbers R might automatically round import. options(digits = 20) trick. (applies fields containing long numbers well.)","code":""},{"path":[]},{"path":"https://lsteinmann.github.io/idaifieldR/reference/get_idaifield_docs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import all docs from an iDAI.field / Field Desktop project — get_idaifield_docs","text":"","code":"if (FALSE) { # \\dontrun{ conn <- connect_idaifield(project = \"rtest\", pwd = \"hallo\") idaifield_docs <- get_idaifield_docs(connection = conn) } # }"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/get_language_lookup.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare a Language List as a Lookup Table — get_language_lookup","title":"Prepare a Language List as a Lookup Table — get_language_lookup","text":"function compiles table background values translations language selected configuration supplied . Current Configuration resources database obtained get_configuration() contain canges made addition project configuration editor iDAI.field 3. can obtain older language configurations download_language_list() iDAI.field GitHub repository.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/get_language_lookup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare a Language List as a Lookup Table — get_language_lookup","text":"","code":"get_language_lookup(lang_list, language = \"en\", remove_config_names = TRUE)"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/get_language_lookup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare a Language List as a Lookup Table — get_language_lookup","text":"lang_list list format used iDAI.fields configuration, containing separate list language short name (e.g. \"en\", \"de\") \"commons\", \"categories\" etc. lists contained. Can obtained get_configuration(). language Language short name extracted, e.g. \"en\", defaults \"en\" remove_config_names TRUE/FALSE: name project removed field names configuration? (Default TRUE.) (e.g.: test:amount renamed amount, see remove_config_names().)","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/get_language_lookup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare a Language List as a Lookup Table — get_language_lookup","text":"data.frame can serve lookup table, background name \"var\" column, selected language \"label\" column.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/get_language_lookup.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prepare a Language List as a Lookup Table — get_language_lookup","text":"aware: two things name background database / project configuration use different translations result one translations used.","code":""},{"path":[]},{"path":"https://lsteinmann.github.io/idaifieldR/reference/get_language_lookup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare a Language List as a Lookup Table — get_language_lookup","text":"","code":"if (FALSE) { # \\dontrun{ conn <- connect_idaifield(serverip = \"127.0.0.1\",                           project = \"rtest\",                           pwd = \"hallo\") config <- get_configuration(connection = conn) lookup <- get_language_lookup(config$languages, language = \"en\") } # }"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/get_uid_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the Index of an idaifield_docs/idaifield_resources-list — get_uid_list","title":"Get the Index of an idaifield_docs/idaifield_resources-list — get_uid_list","text":"resources project databases iDAI.field / Field Desktop stored referenced Universally Unique Identifier (UUID) relations fields. Therefore, many purposes lookup-table needs provided order get actual identifiers resources referenced. Single UUIDs vectors UUIDs can replaced individually using replace_uid() package. function also good quick overview / list resources exist along identifiers short descriptions can used select resources along respective Categories (e.g. Pottery, Layer etc., formerly named \"type\"). Please note case internal names everything used. relabeled Trench Schnitt language-configuration, name still Trench . None functions respect language settings project configuration, .e. front end languages valuelists fields displayed, instead background names used. can see project configuration settings.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/get_uid_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the Index of an idaifield_docs/idaifield_resources-list — get_uid_list","text":"","code":"get_uid_list(   idaifield_docs,   verbose = FALSE,   gather_trenches = FALSE,   remove_config_names = TRUE,   find_layers = FALSE,   language = \"all\" )"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/get_uid_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the Index of an idaifield_docs/idaifield_resources-list — get_uid_list","text":"idaifield_docs object returned get_idaifield_docs() verbose TRUE FALSE. Defaults FALSE. TRUE returns list including identifier shortDescription convenient read, FALSE returns UUID, category (former: type) basic relations, sufficient internal use. gather_trenches defaults FALSE. TRUE, adds another column records Place corresponding Trench sub-resources lie within. (Useful grouping finds several trenches, work project database organized accordingly.) remove_config_names TRUE/FALSE: name project removed field names configuration? (Default TRUE.) (e.g.: test:amount renamed amount, see remove_config_names().) find_layers TRUE/FALSE. Default FALSE. TRUE, adds another column 'Layer' (see getOption(\"idaifield_categories\")$layers, can modified) resource contained  recursively. means even immediately lie within layer, contained one several resources said layer, new column (\"liesWithinLayer\") still show layer. Example: sample \"\" Find \"001\" layer \"Layer1\" usually \"001\" value \"liesWithin\". find_layers, another column called \"liesWithinLayer\" contains \"Layer1\" sample \"\" Find \"001\". language short name (e.g. \"en\", \"de\", \"fr\") language preferred fields. Special value \"\" (default) can used return concatenated string available languages. gather_languages() select available languages alphabetical order selected language available.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/get_uid_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the Index of an idaifield_docs/idaifield_resources-list — get_uid_list","text":"data.frame identifiers corresponding UUIDs along category (former: type), basic relations depending settings place, shortDescription \"liesWithinLayer\" element","code":""},{"path":[]},{"path":"https://lsteinmann.github.io/idaifieldR/reference/get_uid_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the Index of an idaifield_docs/idaifield_resources-list — get_uid_list","text":"","code":"if (FALSE) { # \\dontrun{ connection <- connect_idaifield(serverip = \"127.0.0.1\",                                 user = \"R\", pwd = \"hallo\") idaifield_docs <- get_idaifield_docs(connection = connection,                                      projectname = \"rtest\")  uidlist <- get_uid_list(idaifield_docs, verbose = TRUE) } # }"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idaifield_as_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an idaifield_simple-list to a Matrix — idaifield_as_matrix","title":"Convert an idaifield_simple-list to a Matrix — idaifield_as_matrix","text":"Converts list class idaifield_docs, idaifield_resource idaifield_simple matrix. Recommended use idaifield_simple-lists returned simplify_idaifield(). given list class idaifield_docs containing meta-info, automatically unnest resource level. recommended select list first using idf_select_by() package reduce amount columns returned. See example.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idaifield_as_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an idaifield_simple-list to a Matrix — idaifield_as_matrix","text":"","code":"idaifield_as_matrix(idaifield)"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idaifield_as_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an idaifield_simple-list to a Matrix — idaifield_as_matrix","text":"idaifield object returned get_idaifield_docs(), check_and_unnest() simplify_idaifield()","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idaifield_as_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an idaifield_simple-list to a Matrix — idaifield_as_matrix","text":"matrix (depending selection project database can large)","code":""},{"path":[]},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idaifield_as_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert an idaifield_simple-list to a Matrix — idaifield_as_matrix","text":"","code":"if (FALSE) { # \\dontrun{ connection <- connect_idaifield(serverip = \"127.0.0.1\",                                 user = \"R\",                                 pwd = \"hallo\") idaifield_docs <- get_idaifield_docs(connection = connection,                                      projectname = \"rtest\") pottery <- select_by(idaifield_docs, by = \"category\", value = \"Pottery\") pottery <- simplify_idaifield(pottery,                               uidlist = get_uid_list(idaifield_docs)) pottery <- idaifield_as_matrix(pottery) } # }"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idaifieldr_demodata.html","id":null,"dir":"Reference","previous_headings":"","what":"idaifieldR Demodata — idaifieldr_demodata","title":"idaifieldR Demodata — idaifieldr_demodata","text":"Test demonstration data illustrate packages functionality, real world representation.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idaifieldr_demodata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"idaifieldR Demodata — idaifieldr_demodata","text":"","code":"idaifieldr_demodata"},{"path":[]},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idaifieldr_demodata.html","id":"idaifieldr-demodata","dir":"Reference","previous_headings":"","what":"idaifieldr_demodata","title":"idaifieldR Demodata — idaifieldr_demodata","text":"list (idaifield_docs) 108 elements: identifier identifier / Kurzbezeichner values entries field database","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idaifieldr_demodata.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"idaifieldR Demodata — idaifieldr_demodata","text":"Random collection imagined data","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idf_check_for_project.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for the Existence of a Project in a Field Database (internal) — idf_check_for_project","title":"Check for the Existence of a Project in a Field Database (internal) — idf_check_for_project","text":"function checks given project exists Field Database. project exist, throws error.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idf_check_for_project.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for the Existence of a Project in a Field Database (internal) — idf_check_for_project","text":"","code":"idf_check_for_project(conn, project = NULL)"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idf_check_for_project.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for the Existence of a Project in a Field Database (internal) — idf_check_for_project","text":"conn connection settings returned connect_idaifield() project character. Name project-database check . supplied, function use project specified connection settings.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idf_check_for_project.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for the Existence of a Project in a Field Database (internal) — idf_check_for_project","text":"","code":"if (FALSE) { # \\dontrun{ conn <- connect_idaifield(pwd = \"hallo\", project = \"rtest\") check_for_project(conn) # Will not return anything } # }"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idf_get_changes.html","id":null,"dir":"Reference","previous_headings":"","what":"See when and by whom selected resources have been created or modified — idf_get_changes","title":"See when and by whom selected resources have been created or modified — idf_get_changes","text":"See selected resources created modified","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idf_get_changes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"See when and by whom selected resources have been created or modified — idf_get_changes","text":"","code":"idf_get_changes(connection, ids)"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idf_get_changes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"See when and by whom selected resources have been created or modified — idf_get_changes","text":"connection connection object returned connect_idaifield() ids vector either identifiers UUIDs resources changes returned.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idf_get_changes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"See when and by whom selected resources have been created or modified — idf_get_changes","text":"data.frame row corresponds change made resource named identifier column time stated date column user stated user column. action column, value can either created referring date first creation resource, modified referring date changed.","code":""},{"path":[]},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idf_get_changes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"See when and by whom selected resources have been created or modified — idf_get_changes","text":"","code":"if (FALSE) { # \\dontrun{ connection <- connect_idaifield(pwd = \"hallo\", project = \"rtest\") index <- get_field_index(connection) last_changed <- idf_last_changed(     connection = connection,     index = index,     n = 100 ) changes_df <- idf_get_changes(connection, ids = last_changed) } # }"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idf_index_query.html","id":null,"dir":"Reference","previous_headings":"","what":"Query docs from an iDAI.field Database Based on an Index (uidlist) — idf_index_query","title":"Query docs from an iDAI.field Database Based on an Index (uidlist) — idf_index_query","text":"function can used gather docs iDAI.field / Field Desktop Database according values listed index returned get_field_index() get_uid_list().","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idf_index_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query docs from an iDAI.field Database Based on an Index (uidlist) — idf_index_query","text":"","code":"idf_index_query(   connection,   field = \"category\",   value = \"Brick\",   uidlist = NULL,   projectname = NULL )"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idf_index_query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query docs from an iDAI.field Database Based on an Index (uidlist) — idf_index_query","text":"connection connection object returned connect_idaifield() field character. resource field selected (options limited column names uidlist). value character. value selected specified field. uidlist data.frame returned get_field_index() (get_uid_list()). projectname (deprecated) name project queried (overrides one listed connection-object).","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idf_index_query.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query docs from an iDAI.field Database Based on an Index (uidlist) — idf_index_query","text":"idaifield_docs list","code":""},{"path":[]},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idf_index_query.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Query docs from an iDAI.field Database Based on an Index (uidlist) — idf_index_query","text":"","code":"if (FALSE) { # \\dontrun{ conn <- connect_idaifield(pwd = \"hallo\", project = \"rtest\") uidlist <- get_field_index(conn) idf_index_query(conn,                 field = \"category\",                 value = \"Brick\",                 uidlist = uidlist) } # }"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idf_json_query.html","id":null,"dir":"Reference","previous_headings":"","what":"Query docs from an iDAI.field Database Based on a JSON-Query — idf_json_query","title":"Query docs from an iDAI.field Database Based on a JSON-Query — idf_json_query","text":"function can used gather docs iDAI.field / Field Desktop Database using JSON-Query detailed CouchDB-API Docs.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idf_json_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query docs from an iDAI.field Database Based on a JSON-Query — idf_json_query","text":"","code":"idf_json_query(connection, query, projectname = NULL)"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idf_json_query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query docs from an iDAI.field Database Based on a JSON-Query — idf_json_query","text":"connection connection object returned connect_idaifield() query valid JSON-query detailed relevant section CouchDB-API documentation. projectname (deprecated) name project queried (overrides one listed connection-object).","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idf_json_query.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query docs from an iDAI.field Database Based on a JSON-Query — idf_json_query","text":"idaifield_docs list","code":""},{"path":[]},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idf_json_query.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Query docs from an iDAI.field Database Based on a JSON-Query — idf_json_query","text":"","code":"if (FALSE) { # \\dontrun{ conn <- connect_idaifield(pwd = \"hallo\", project = \"rtest\")  # Get all documents that contain \"Anna Allgemeinperson\" as processor query <- '{ \"selector\": { \"resource.processor\": [\"Anna Allgemeinperson\"] } }' result <- idf_json_query(conn, query = query)   # Get all documents where hasRestoration is TRUE query <- '{ \"selector\": { \"resource.hasRestoration\": true } }' result <- idf_json_query(conn, query = query)  # Get all documents where hasRestoration is TRUE # but only the fields *identifier* and *hasRestoration* query <- '{ \"selector\": { \"resource.hasRestoration\": true }, \"fields\": [ \"resource.identifier\", \"resource.hasRestoration\" ] }' result <- idf_json_query(conn, query = query)  } # }"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idf_last_changed.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a vector of UUIDs or identifiers of the last n changed resources — idf_last_changed","title":"Get a vector of UUIDs or identifiers of the last n changed resources — idf_last_changed","text":"Retrieves names/identifiers UUIDs recently changed resources database. index returned get_field_index() get_uid_list() returned, UUIDs replaced identifiers. , UUIDs returned directly can used querying e.g. ","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idf_last_changed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a vector of UUIDs or identifiers of the last n changed resources — idf_last_changed","text":"","code":"idf_last_changed(connection, index = NULL, n = 100)"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idf_last_changed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a vector of UUIDs or identifiers of the last n changed resources — idf_last_changed","text":"connection connection object returned connect_idaifield() index data.frame returned get_field_index() (get_uid_list()). n numeric. Maximum number last changed resources get.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idf_last_changed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a vector of UUIDs or identifiers of the last n changed resources — idf_last_changed","text":"vector UUIDs identifiers recently changed n resources.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idf_last_changed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a vector of UUIDs or identifiers of the last n changed resources — idf_last_changed","text":"","code":"if (FALSE) { # \\dontrun{ connection <- connect_idaifield(pwd = \"hallo\", project = \"rtest\") index <- get_field_index(connection) last_changed <- idf_last_changed(     connection = connection,     index = index,     n = 100 ) } # }"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idf_ping.html","id":null,"dir":"Reference","previous_headings":"","what":"Ping the Field-Database — idf_ping","title":"Ping the Field-Database — idf_ping","text":"function checks connection Field Database can established. returns boolean value indicating connection successful . Warnings used indicate connection failed, .","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idf_ping.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ping the Field-Database — idf_ping","text":"","code":"idf_ping(conn)"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idf_ping.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ping the Field-Database — idf_ping","text":"conn object contains connection settings, returned connect_idaifield().","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idf_ping.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ping the Field-Database — idf_ping","text":"boolean value indicating connection successful (TRUE) (FALSE).","code":""},{"path":[]},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idf_ping.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ping the Field-Database — idf_ping","text":"","code":"if (FALSE) { # \\dontrun{ # Establish a connection to the Field Database conn <- connect_idaifield(ping = FALSE)  # Ping the Field Database idf_ping(conn) } # }"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idf_projects.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a Vector of Project Names Present in the Database — idf_projects","title":"Get a Vector of Project Names Present in the Database — idf_projects","text":"Get Vector Project Names Present Database","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idf_projects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a Vector of Project Names Present in the Database — idf_projects","text":"","code":"idf_projects(connection)"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idf_projects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a Vector of Project Names Present in the Database — idf_projects","text":"connection connection settings returned connect_idaifield()","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idf_projects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a Vector of Project Names Present in the Database — idf_projects","text":"character vector containing projects present database, NA connection refused.","code":""},{"path":[]},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idf_projects.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a Vector of Project Names Present in the Database — idf_projects","text":"","code":"if (FALSE) { # \\dontrun{  connection <- connect_idaifield(pwd = \"hallo\")  idf_project_list(connection) } # }"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idf_query.html","id":null,"dir":"Reference","previous_headings":"","what":"Query docs from an iDAI.field Database Directly — idf_query","title":"Query docs from an iDAI.field Database Directly — idf_query","text":"function can used gather docs iDAI.field / Field Desktop Database according values specific fields.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idf_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query docs from an iDAI.field Database Directly — idf_query","text":"","code":"idf_query(   connection,   field = \"category\",   value = \"Pottery\",   projectname = NULL )"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idf_query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query docs from an iDAI.field Database Directly — idf_query","text":"connection connection settings object returned connect_idaifield() field character. resource field selected (.e. \"category\" category resource (Pottery, Brick, Layer)). value character. value selected specified field (.e. \"Brick\" looking resources category Brick). projectname (deprecated) name project queried (overrides one listed connection-object).","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idf_query.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query docs from an iDAI.field Database Directly — idf_query","text":"idaifield_docs list containing docs fit query parameters.","code":""},{"path":[]},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idf_query.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Query docs from an iDAI.field Database Directly — idf_query","text":"","code":"if (FALSE) { # \\dontrun{ conn <- connect_idaifield(pwd = \"hallo\", project = \"rtest\") idf_query(conn, field = \"category\", value = \"Brick\") } # }"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idf_select_by.html","id":null,"dir":"Reference","previous_headings":"","what":"Select/Filter an idaifield_resources- or idaifield_docs-list — idf_select_by","title":"Select/Filter an idaifield_resources- or idaifield_docs-list — idf_select_by","text":"Subset filter list docs resources given parameters. may want consider querying database directly using idf_query(), idf_index_query(), idf_json_query().","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idf_select_by.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select/Filter an idaifield_resources- or idaifield_docs-list — idf_select_by","text":"","code":"idf_select_by(idaifield_docs, by = NULL, value = NULL)"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idf_select_by.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select/Filter an idaifield_resources- or idaifield_docs-list — idf_select_by","text":"idaifield_docs idaifield_resources- idaifield_docs-list returned get_idaifield_docs()  idf_query(), idf_index_query(), idf_json_query(). name field might present resource lists, e.g. category, identifier, processor etc. value character. internal name value selected (e.g. \"Layer\", \"Pottery\"), can also vector multiple values.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idf_select_by.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select/Filter an idaifield_resources- or idaifield_docs-list — idf_select_by","text":"list class idaifield_resources containing resources contain specified values.","code":""},{"path":[]},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idf_select_by.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select/Filter an idaifield_resources- or idaifield_docs-list — idf_select_by","text":"","code":"if (FALSE) { # \\dontrun{ connection <- connect_idaifield(serverip = \"127.0.0.1\", user = \"R\", pwd = \"hallo\", project = \"rtest\") idaifield_docs <- get_idaifield_docs(connection = connection)  idaifield_layers <- idf_select_by(idaifield_docs, by = \"category\", value = \"Layer\")  idaifield_anna <- idf_select_by(idaifield_docs, by = \"processor\", value = \"Anna Allgemeinperson\") } # }"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idf_sepdim.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a List of Dimensions to Simpler Values — idf_sepdim","title":"Convert a List of Dimensions to Simpler Values — idf_sepdim","text":"function breaks list dimensions (e.g. dimensionLength, dimensionWidth, etc.) single resource (element) idaifield_docs idaifield_resources object converts simple values.used helper function simplify_idaifield().","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idf_sepdim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a List of Dimensions to Simpler Values — idf_sepdim","text":"","code":"idf_sepdim(dimensionList, name = NULL)"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idf_sepdim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a List of Dimensions to Simpler Values — idf_sepdim","text":"dimensionList list dimensions (e.g. dimensionLength, dimensionWidth, etc.) single resource (element) idaifield_docs idaifield_resources object. name character. name corresponding dimension list. Defaults \"dimension\".","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idf_sepdim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a List of Dimensions to Simpler Values — idf_sepdim","text":"list containing simple values measured dimension list. range entered, function returns mean without comment.","code":""},{"path":[]},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idf_sepdim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a List of Dimensions to Simpler Values — idf_sepdim","text":"","code":"if (FALSE) { # \\dontrun{ dimensionLength_new <- idf_sepdim(idaifield_resources[[1]]$dimensionLength, \"dimensionLength\") } # }"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idf_show_categories.html","id":null,"dir":"Reference","previous_headings":"","what":"Show the categories Present in an idaifield_docs- or idaifield_resources-list — idf_show_categories","title":"Show the categories Present in an idaifield_docs- or idaifield_resources-list — idf_show_categories","text":"Returns list categories present iDAI.field 2 / Field Desktop database list imported .","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idf_show_categories.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show the categories Present in an idaifield_docs- or idaifield_resources-list — idf_show_categories","text":"","code":"idf_show_categories(idaifield_docs)"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idf_show_categories.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show the categories Present in an idaifield_docs- or idaifield_resources-list — idf_show_categories","text":"idaifield_docs idaifield_docs- idaifield_resources-list returned get_idaifield_docs() idf_query(), idf_index_query() idf_json_query().","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idf_show_categories.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show the categories Present in an idaifield_docs- or idaifield_resources-list — idf_show_categories","text":"character vector unique categories present iDAI.field 2 / Field Desktop database list imported .","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/idf_show_categories.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show the categories Present in an idaifield_docs- or idaifield_resources-list — idf_show_categories","text":"","code":"if (FALSE) { # \\dontrun{ connection <- connect_idaifield(serverip = \"127.0.0.1\",                                 user = \"R\",                                 pwd = \"hallo\",                                 project = \"rtest\")  idaifield_docs <- get_idaifield_docs(connection = connection)  idf_show_categories(idaifield_docs) } # }"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/na_if_empty.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns NA if an object handed to the function is empty — na_if_empty","title":"Returns NA if an object handed to the function is empty — na_if_empty","text":"helper function defence empty list items iDAI.field 2 / Field Desktop, sometimes occur. simply writes NA corresponding field list kind object handed length 0. Otherwise, returns input untouched.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/na_if_empty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns NA if an object handed to the function is empty — na_if_empty","text":"","code":"na_if_empty(item)"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/na_if_empty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns NA if an object handed to the function is empty — na_if_empty","text":"item object whatsoever","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/na_if_empty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns NA if an object handed to the function is empty — na_if_empty","text":"NA empty, object handed ","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/na_if_empty.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns NA if an object handed to the function is empty — na_if_empty","text":"","code":"if (FALSE) { # \\dontrun{ na_if_empty(1) na_if_empty(list(2,3,4,list(4,5,4))) na_if_empty(NULL) } # }"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/name_docs_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Name the list of idaifield_docs by identifier — name_docs_list","title":"Name the list of idaifield_docs by identifier — name_docs_list","text":"Name list idaifield_docs identifier","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/name_docs_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Name the list of idaifield_docs by identifier — name_docs_list","text":"","code":"name_docs_list(docs)"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/name_docs_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Name the list of idaifield_docs by identifier — name_docs_list","text":"docs idaifield_docs","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/name_docs_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Name the list of idaifield_docs by identifier — name_docs_list","text":", named","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/proj_idf_client.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Connection Client to a Field database (internal) — proj_idf_client","title":"Create a Connection Client to a Field database (internal) — proj_idf_client","text":"function creates crul::HttpClientobject use retrieving documents querying Field database associated specific project. function intended internal use .","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/proj_idf_client.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Connection Client to a Field database (internal) — proj_idf_client","text":"","code":"proj_idf_client(conn, project = NULL, include = \"all\")"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/proj_idf_client.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Connection Client to a Field database (internal) — proj_idf_client","text":"conn connection object returned connect_idaifield(). project (deprecated) character. Name project-database loaded. include Arguments: \"\", \"query\", \"changes\" . client use \"_all_docs\", \"_find\" \"_changes\" paths. crul CRAN CouchDB API","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/proj_idf_client.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Connection Client to a Field database (internal) — proj_idf_client","text":"crul::HttpClient() object.","code":""},{"path":[]},{"path":"https://lsteinmann.github.io/idaifieldR/reference/proj_idf_client.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Connection Client to a Field database (internal) — proj_idf_client","text":"","code":"if (FALSE) { # \\dontrun{   connection <- connect_idaifield(pwd = \"hallo\", project = \"rtest\")   client <- proj_idf_client(conn = connection) } # }"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/reduce_relations.html","id":null,"dir":"Reference","previous_headings":"","what":"Reduces a (relations) list to its first element and warns accordingly. — reduce_relations","title":"Reduces a (relations) list to its first element and warns accordingly. — reduce_relations","text":"Reduces (relations) list first element warns accordingly.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/reduce_relations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reduces a (relations) list to its first element and warns accordingly. — reduce_relations","text":"","code":"reduce_relations(relation, uuid = NA, identifier = NA)"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/reduce_relations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reduces a (relations) list to its first element and warns accordingly. — reduce_relations","text":"uuid id/UUID resource (warning) identifier identifier resource (warning) resource resource checked","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/reduce_relations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reduces a (relations) list to its first element and warns accordingly. — reduce_relations","text":"reduced relations list","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/reformat_geometry.html","id":null,"dir":"Reference","previous_headings":"","what":"Reformat the Geometry of a single iDAI.field / Field Desktop resource — reformat_geometry","title":"Reformat the Geometry of a single iDAI.field / Field Desktop resource — reformat_geometry","text":"Reformat Geometry single iDAI.field / Field Desktop resource","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/reformat_geometry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reformat the Geometry of a single iDAI.field / Field Desktop resource — reformat_geometry","text":"","code":"reformat_geometry(geometry)"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/reformat_geometry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reformat the Geometry of a single iDAI.field / Field Desktop resource — reformat_geometry","text":"geometry list resource$geometry idaifield_docs- idaifield_resources-list.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/reformat_geometry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reformat the Geometry of a single iDAI.field / Field Desktop resource — reformat_geometry","text":"geometry resource usable format can processed tools like sp's SpatialPoints() etc. work spatial data. geometry returned matrix list.","code":""},{"path":[]},{"path":"https://lsteinmann.github.io/idaifieldR/reference/reformat_geometry.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reformat the Geometry of a single iDAI.field / Field Desktop resource — reformat_geometry","text":"","code":"if (FALSE) { # \\dontrun{ test_2 <- list(type = \"Polygon\",     coordinates = list(list(list(1), list(1)),                        list(list(1), list(2)),                        list(list(2), list(2)),                        list(list(1), list(1))                        ) )  reformat_geometry(test_2)  } # }"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/remove_config_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove Everything Before the Colon in a Character Vector — remove_config_names","title":"Remove Everything Before the Colon in a Character Vector — remove_config_names","text":"function removes everything first colon (including colon) character vector. used helper function simplify_idaifield().","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/remove_config_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove Everything Before the Colon in a Character Vector — remove_config_names","text":"","code":"remove_config_names(   conf_names = c(\"identifier\", \"configname:test\", \"test\"),   silent = FALSE )"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/remove_config_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove Everything Before the Colon in a Character Vector — remove_config_names","text":"conf_names character vector. silent message duplicates detected suppressed? Default FALSE.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/remove_config_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove Everything Before the Colon in a Character Vector — remove_config_names","text":"character vector everything first colon (including colon) removed.","code":""},{"path":[]},{"path":"https://lsteinmann.github.io/idaifieldR/reference/remove_config_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove Everything Before the Colon in a Character Vector — remove_config_names","text":"","code":"if (FALSE) { # \\dontrun{ nameslist <- c(\"relation.liesWithin\", \"relation.liesWithinLayer\", \"campaign.2022\", \"rtest:test\", \"pergamon:neuesFeld\") remove_config_names(nameslist, silent = FALSE) } # }"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/reorder_colnames.html","id":null,"dir":"Reference","previous_headings":"","what":"Reorders the column names for idaifield_as_matrix() — reorder_colnames","title":"Reorders the column names for idaifield_as_matrix() — reorder_colnames","text":"Reorders column names idaifield_as_matrix()","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/reorder_colnames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reorders the column names for idaifield_as_matrix() — reorder_colnames","text":"","code":"reorder_colnames(colnames, order = \"default\")"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/reorder_colnames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reorders the column names for idaifield_as_matrix() — reorder_colnames","text":"colnames character vector colnames order either \"default\" default order (first columns \"identifier\", \"category\", \"shortDescription\" rest assembled) character vector exact column names place first n columns matrix produced idaifield_as_matrix()","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/reorder_colnames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reorders the column names for idaifield_as_matrix() — reorder_colnames","text":"character vector","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/reorder_colnames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reorders the column names for idaifield_as_matrix() — reorder_colnames","text":"","code":"if (FALSE) { # \\dontrun{ colnames <- c(\"materialType\", \"identifier\", \"shortDescription\", \"category\")  reorder_colnames(colnames, order = \"default\") } # }"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/replace_uid.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace a Vector of UUIDs with their identifiers — replace_uid","title":"Replace a Vector of UUIDs with their identifiers — replace_uid","text":"handed item (vector single variable) first checks actually UUID defined check_if_uid() , replaces corresponding identifier uidlist (also handed function).","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/replace_uid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace a Vector of UUIDs with their identifiers — replace_uid","text":"","code":"replace_uid(uidvector, uidlist)"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/replace_uid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace a Vector of UUIDs with their identifiers — replace_uid","text":"uidvector vector UUIDs replaced identifiers uidlist uidlist resp. index returned get_uid_list() get_field_index()","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/replace_uid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace a Vector of UUIDs with their identifiers — replace_uid","text":"corresponding identifier(s) (character string/vector)","code":""},{"path":[]},{"path":"https://lsteinmann.github.io/idaifieldR/reference/replace_uid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Replace a Vector of UUIDs with their identifiers — replace_uid","text":"","code":"if (FALSE) { # \\dontrun{ conn <- connect_idaifield(pwd = \"hallo\", project = \"rtest\") index <- get_field_index(conn)  replace_uid(\"02932bc4-22ce-3080-a205-e050b489c0c2\", uidlist = index[, c(\"identifier\", \"UID\")]) } # }"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/response_to_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Format the response of a crul::HttpClient from json to list — response_to_list","title":"Format the response of a crul::HttpClient from json to list — response_to_list","text":"Format response crul::HttpClient json list","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/response_to_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format the response of a crul::HttpClient from json to list — response_to_list","text":"","code":"response_to_list(response = NULL)"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/response_to_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format the response of a crul::HttpClient from json to list — response_to_list","text":"response \"HttpResponse\" returned client$get client produced proj_idf_client()","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/response_to_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format the response of a crul::HttpClient from json to list — response_to_list","text":"list","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/select_by.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated function: Select/filter an idaifield_resources- or idaifield_docs-list — select_by","title":"Deprecated function: Select/filter an idaifield_resources- or idaifield_docs-list — select_by","text":"function deprecated favour idf_select_by().","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/select_by.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated function: Select/filter an idaifield_resources- or idaifield_docs-list — select_by","text":"","code":"select_by(idaifield_docs, by = c(\"category\", \"isRecordedIn\"), value = NULL)"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/select_by.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deprecated function: Select/filter an idaifield_resources- or idaifield_docs-list — select_by","text":"idaifield_docs idaifield_resources- idaifield_docs-list returned get_idaifield_docs() etc. name field might present resource lists, e.g. category, identifier, processor etc. value character. internal name value selected (e.g. \"Layer\", \"Pottery\"), can also vector multiple values.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/select_by.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deprecated function: Select/filter an idaifield_resources- or idaifield_docs-list — select_by","text":"list class idaifield_resources containing resources contain specified values.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/select_by.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Deprecated function: Select/filter an idaifield_resources- or idaifield_docs-list — select_by","text":"Subset filter list docs resources given parameters. may want consider querying database directly using idf_query(), idf_index_query() idf_json_query().","code":""},{"path":[]},{"path":"https://lsteinmann.github.io/idaifieldR/reference/select_by.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Deprecated function: Select/filter an idaifield_resources- or idaifield_docs-list — select_by","text":"","code":"if (FALSE) { # \\dontrun{ connection <- connect_idaifield(serverip = \"127.0.0.1\", user = \"R\", pwd = \"hallo\", project = \"rtest\") idaifield_docs <- get_idaifield_docs(connection = connection)  idaifield_layers <- idf_select_by(idaifield_docs, by = \"category\", value = \"Layer\")  idaifield_anna <- idf_select_by(idaifield_docs, by = \"processor\", value = \"Anna Allgemeinperson\") } # }"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/simplify_idaifield.html","id":null,"dir":"Reference","previous_headings":"","what":"Simplify a List Imported from an iDAI.field / Field Desktop-1041-1#' Simplify a List Imported from an iDAI.field / Field Desktop-Database — simplify_idaifield","title":"Simplify a List Imported from an iDAI.field / Field Desktop-1041-1#' Simplify a List Imported from an iDAI.field / Field Desktop-Database — simplify_idaifield","text":"function take list returned get_idaifield_docs(), idf_query(), idf_index_query(), idf_json_query() process make list usable. unnest lists, including dimension-lists period-list provide single values later processing idaifield_as_matrix(). connection database can established, function get relevant project configuration convert custom checkboxes-fields multiple lists, every value respective valuelist, make accessible conversion idaifield_as_matrix(). also remove custom configuration field names use since iDAI.field 3 / Field Desktop consist \"projectname:fieldName\". \"projectname:\"-part removed.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/simplify_idaifield.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simplify a List Imported from an iDAI.field / Field Desktop-1041-1#' Simplify a List Imported from an iDAI.field / Field Desktop-Database — simplify_idaifield","text":"","code":"simplify_idaifield(   idaifield_docs,   keep_geometry = FALSE,   replace_uids = TRUE,   find_layers = TRUE,   uidlist = NULL,   language = \"all\",   remove_config_names = TRUE,   spread_fields = TRUE,   use_exact_dates = FALSE,   silent = FALSE )"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/simplify_idaifield.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simplify a List Imported from an iDAI.field / Field Desktop-1041-1#' Simplify a List Imported from an iDAI.field / Field Desktop-Database — simplify_idaifield","text":"idaifield_docs idaifield_docs idaifield_resources-list returned get_idaifield_docs() idf_query(), idf_index_query(), idf_json_query(). keep_geometry TRUE/FALSE: geographical information kept removed? Defaults FALSE. Uses: reformat_geometry() replace_uids TRUE/FALSE: UUIDs automatically replaced corresponding identifiers? Defaults TRUE. Uses: fix_relations() replace_uid(), also: find_layer() find_layers TRUE/FALSE. Default FALSE. TRUE, adds another column 'Layer' (see getOption(\"idaifield_categories\")$layers, can modified) resource contained  recursively. means even immediately lie within layer, contained one several resources said layer, new column (\"liesWithinLayer\") still show layer. Example: sample \"\" Find \"001\" layer \"Layer1\" usually \"001\" value \"liesWithin\". find_layers, another column called \"liesWithinLayer\" contains \"Layer1\" sample \"\" Find \"001\". uidlist NULL (default) list UUIDs identifiers automatically generated within function using get_uid_list(). makes sense list handed simplify_idaifield() selected yet. , supply data.frame returned get_field_index(). language short name (e.g. \"en\", \"de\", \"fr\") language preferred fields. Special value \"\" (default) can used return concatenated string available languages. gather_languages() select available languages alphabetical order selected language available. remove_config_names TRUE/FALSE: name project removed field names configuration? (Default TRUE.) (e.g.: test:amount renamed amount, see remove_config_names().) spread_fields TRUE/FALSE: checkbox-fields spread across multiple lists facilitate boolean-columns value checkbox-field? Default TRUE. Uses: get_configuration(), get_field_inputtypes(), convert_to_onehot() use_exact_dates TRUE/FALSE: values \"exact\" dates used case ? Default FALSE. Changes outcome fix_dating(). silent TRUE/FALSE, default: FALSE. messages suppressed?","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/simplify_idaifield.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simplify a List Imported from an iDAI.field / Field Desktop-1041-1#' Simplify a List Imported from an iDAI.field / Field Desktop-Database — simplify_idaifield","text":"idaifield_simple-list containing resources different format depending parameters used.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/simplify_idaifield.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simplify a List Imported from an iDAI.field / Field Desktop-1041-1#' Simplify a List Imported from an iDAI.field / Field Desktop-Database — simplify_idaifield","text":"Please note: function need Index (.e. uidlist provided get_uid_list()) complete project database correctly replace UUIDs corresponding identifiers! Especially selected list passed simplify_idaifield(), need supply uidlist complete project database well. Formatting various lists: Dimension measurements well dating reformatted might produce unexpected results. dating, begin end values evaluated resource, minimum value \"begin\" maximum value \"end\" selected. dimension-fields, ranged measurement selected, mean returned.","code":""},{"path":[]},{"path":"https://lsteinmann.github.io/idaifieldR/reference/simplify_idaifield.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simplify a List Imported from an iDAI.field / Field Desktop-1041-1#' Simplify a List Imported from an iDAI.field / Field Desktop-Database — simplify_idaifield","text":"","code":"if (FALSE) { # \\dontrun{ connection <- connect_idaifield(serverip = \"127.0.0.1\",     project = \"rtest\",     user = \"R\",     pwd = \"hallo\") idaifield_docs <- get_idaifield_docs(connection = connection)  simpler_idaifield <- simplify_idaifield(idaifield_docs) } # }"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/simplify_single_resource.html","id":null,"dir":"Reference","previous_headings":"","what":"Simplifies a single resource from the iDAI.field 2 / Field Desktop Database — simplify_single_resource","title":"Simplifies a single resource from the iDAI.field 2 / Field Desktop Database — simplify_single_resource","text":"function helper simplify_idaifield().","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/simplify_single_resource.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simplifies a single resource from the iDAI.field 2 / Field Desktop Database — simplify_single_resource","text":"","code":"simplify_single_resource(   resource,   replace_uids = TRUE,   find_layers = TRUE,   uidlist = NULL,   keep_geometry = TRUE,   fieldtypes = NULL,   remove_config_names = TRUE,   language = \"all\",   spread_fields = TRUE,   use_exact_dates = FALSE,   silent = FALSE )"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/simplify_single_resource.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simplifies a single resource from the iDAI.field 2 / Field Desktop Database — simplify_single_resource","text":"resource One resource (element) idaifield_resources-list. replace_uids TRUE/FALSE: UUIDs automatically replaced corresponding identifiers? Defaults TRUE. Uses: fix_relations() replace_uid(), also: find_layer() find_layers TRUE/FALSE. Default FALSE. TRUE, adds another column 'Layer' (see getOption(\"idaifield_categories\")$layers, can modified) resource contained  recursively. means even immediately lie within layer, contained one several resources said layer, new column (\"liesWithinLayer\") still show layer. Example: sample \"\" Find \"001\" layer \"Layer1\" usually \"001\" value \"liesWithin\". find_layers, another column called \"liesWithinLayer\" contains \"Layer1\" sample \"\" Find \"001\". uidlist NULL (default) list UUIDs identifiers automatically generated within function using get_uid_list(). makes sense list handed simplify_idaifield() selected yet. , supply data.frame returned get_field_index(). keep_geometry TRUE/FALSE: geographical information kept removed? Defaults FALSE. Uses: reformat_geometry() remove_config_names TRUE/FALSE: name project removed field names configuration? (Default TRUE.) (e.g.: test:amount renamed amount, see remove_config_names().) language short name (e.g. \"en\", \"de\", \"fr\") language preferred fields. Special value \"\" (default) can used return concatenated string available languages. gather_languages() select available languages alphabetical order selected language available. spread_fields TRUE/FALSE: checkbox-fields spread across multiple lists facilitate boolean-columns value checkbox-field? Default TRUE. Uses: get_configuration(), get_field_inputtypes(), convert_to_onehot() use_exact_dates TRUE/FALSE: values \"exact\" dates used case ? Default FALSE. Changes outcome fix_dating(). silent TRUE/FALSE, default: FALSE. messages suppressed?","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/simplify_single_resource.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simplifies a single resource from the iDAI.field 2 / Field Desktop Database — simplify_single_resource","text":"single resource (element) idaifield_resources-list.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/simplify_single_resource.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simplifies a single resource from the iDAI.field 2 / Field Desktop Database — simplify_single_resource","text":"","code":"if (FALSE) { # \\dontrun{ simpler_resource <- simplify_single_resource(resource, replace_uids = TRUE, uidlist = uidlist, keep_geometry = FALSE) } # }"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/type_to_category.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace type with category in resource list names — type_to_category","title":"Replace type with category in resource list names — type_to_category","text":"Replace type category resource list names","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/type_to_category.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace type with category in resource list names — type_to_category","text":"","code":"type_to_category(docs)"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/type_to_category.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace type with category in resource list names — type_to_category","text":"idaifield_docs","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/type_to_category.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace type with category in resource list names — type_to_category","text":"docs \"type\" renamed \"category\"","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/unnest_docs.html","id":null,"dir":"Reference","previous_headings":"","what":"Unnesting a idaifield_docs-List down to resource level — unnest_docs","title":"Unnesting a idaifield_docs-List down to resource level — unnest_docs","text":"function unnests lists provided iDAI.field 2 / Field Desktop. actual data resource usually stored sub-list behind $doc$resource, contains data one mostly want work R. top level data contains information created modified resource time irrelevant analysis database contents .","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/unnest_docs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unnesting a idaifield_docs-List down to resource level — unnest_docs","text":"","code":"unnest_docs(docs)"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/unnest_docs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unnesting a idaifield_docs-List down to resource level — unnest_docs","text":"idaifield_docs list provided get_idaifield_docs(). get_idaifield_docs() employs function already setting raw = FALSE.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/unnest_docs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unnesting a idaifield_docs-List down to resource level — unnest_docs","text":"list class idaifield_resources (idaifield_docs, top-level meta-information removed make actual resource data accessible)","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/unnest_docs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Unnesting a idaifield_docs-List down to resource level — unnest_docs","text":"","code":"if (FALSE) { # \\dontrun{ connection <- connect_idaifield(serverip = \"127.0.0.1\", user = \"R\", pwd = \"hallo\") idaifield_docs <- get_idaifield_docs(connection = connection, projectname = \"rtest\")  idaifield_resources <- unnest_docs(idaifield_docs) } # }"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/warn_for_project.html","id":null,"dir":"Reference","previous_headings":"","what":"TEMPORARY FUNCTION to warn about project(name) — warn_for_project","title":"TEMPORARY FUNCTION to warn about project(name) — warn_for_project","text":"TEMPORARY FUNCTION warn project(name)","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/warn_for_project.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TEMPORARY FUNCTION to warn about project(name) — warn_for_project","text":"","code":"warn_for_project(project = NULL, fail = FALSE)"},{"path":"https://lsteinmann.github.io/idaifieldR/reference/warn_for_project.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TEMPORARY FUNCTION to warn about project(name) — warn_for_project","text":"project connection$project fail error?","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/reference/warn_for_project.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"TEMPORARY FUNCTION to warn about project(name) — warn_for_project","text":"TRUE/FALSE","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/news/index.html","id":"idaifieldr-035-2025-03-08","dir":"Changelog","previous_headings":"","what":"idaifieldR 0.3.5 2025-03-08","title":"idaifieldR 0.3.5 2025-03-08","text":"checks project exists simplify_idaifield() improve support older projects fix language selection get_field_index() (hopefully) fix failing tests","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/news/index.html","id":"idaifieldr-034-2023-12-17","dir":"Changelog","previous_headings":"","what":"idaifieldR 0.3.4 2023-12-17","title":"idaifieldR 0.3.4 2023-12-17","text":"Make get_field_index() efficient utilizing vectors instead lapply(). Adding liesWithinLayer get_field_index() simplify_idaifield() now option. way, get_field_index() “shortDescription” can added without time intensive recursive layer search comes now available option find_layers = TRUE. info , see documentation find_layer(). simplify_idaifield() now slightly faster uses find_layer() differently. find_layer() can now handle vector multiple ids. project/projectname-argument removed soon, project needs specified connect_idaifield(). Relevant functions currently issue warning effect.","code":""},{"path":[]},{"path":"https://lsteinmann.github.io/idaifieldR/news/index.html","id":"new-features-0-3-3","dir":"Changelog","previous_headings":"","what":"New features","title":"idaifieldR 0.3.3 2023-11-23","text":"Add idf_last_changed(connection, n = n): Returns vector last n changed resources database. Add idf_get_changes(connection, ids = c(...)): Returns data.frame change one resources listed ids (can either ‘identifier’ ‘UUID’) corresponds one row separated creation modification. remove_config_names() issues message duplicate field category names appropriate. Functions may override data multiple columns name otherwise exist, e.g. ‘diameter’ ‘projectName:diameter’. Attaches attribute lists duplicate field/category names.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/news/index.html","id":"minor-changes-0-3-3","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"idaifieldR 0.3.3 2023-11-23","text":"Notify new / different version GitHub attaching package (check_idaifieldr_version()).","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/news/index.html","id":"fixes-0-3-3","dir":"Changelog","previous_headings":"","what":"Fixes","title":"idaifieldR 0.3.3 2023-11-23","text":"Fix problem reformat_geometry() (MultiPolygons unnested processing). (Imported Polygons may formatted improperly, unnest necessary (reformat_geometry()). Geometry still work progress.) Fix bug get_field_index(), return empty data.frame configuration-resource.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/news/index.html","id":"idaifieldr-032-2023-04-15","dir":"Changelog","previous_headings":"","what":"idaifieldR 0.3.2 2023-04-15","title":"idaifieldR 0.3.2 2023-04-15","text":"add option use use exact dates min/max values dating present add idf_json_query() lets users construct queries CouchDB-API improve export find_layer() fix error get_language_lookup() fix bug idf_query()-function get values fields possibility multiple entries remove config attribute save space rename select_by() idf_select_by() rename show_categories() idf_show_categories() update idf_select_by() idf_show_categories() update vignettes update/enhanced documentation add sticker","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/news/index.html","id":"idaifieldr-031-2023-04-02","dir":"Changelog","previous_headings":"","what":"idaifieldR 0.3.1 2023-04-02","title":"idaifieldR 0.3.1 2023-04-02","text":"course, missed half . fix idf_query()/idf_index_query(): rename “type” “category” resource lists type column idaifield_as_matrix() fix renaming type/category simplify_idaifield() fix missed type/category issue convert_to_onehot() “solve” minor problem spreading checkbox fields (#TODO)","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/news/index.html","id":"idaifieldr-030-2023-04-02","dir":"Changelog","previous_headings":"","what":"idaifieldR 0.3.0 2023-04-02","title":"idaifieldR 0.3.0 2023-04-02","text":"remove sofa dependency add custom interface reduced functionality restructure unnesting (unnest_docs() & find_resource()) add get_field_index() - getting uidlist/index directly database exchange type category everywhere (Attention: may well break previous scripts) speed find_layer() significantly check project exists attempting query database","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/news/index.html","id":"breaking-changes-0-3-0","dir":"Changelog","previous_headings":"","what":"Breaking changes:","title":"idaifieldR 0.3.0 2023-04-02","text":"“type” refer type resource (Find, Layer, Place etc.) renamed category, current structure database. uidlist-column “type” renamed “category” along reference information anywhere else (hope ;) ).","code":""},{"path":[]},{"path":"https://lsteinmann.github.io/idaifieldR/news/index.html","id":"new-0-2-4","dir":"Changelog","previous_headings":"","what":"new:","title":"idaifieldR 0.2.4 2023-03-31","text":"handle / reformat dating fields getting min max date","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/news/index.html","id":"fixes-0-2-4","dir":"Changelog","previous_headings":"","what":"fixes:","title":"idaifieldR 0.2.4 2023-03-31","text":"get type category type empty get_uid_list() multiple queries idf_query() type & category simplify_idaifield(), category currently switched type, changed later -> #TODO: rename type everywhere category reflect actual db structure","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/news/index.html","id":"idaifieldr-023-2023-03-16","dir":"Changelog","previous_headings":"","what":"idaifieldR 0.2.3 2023-03-16","title":"idaifieldR 0.2.3 2023-03-16","text":"add language management multi-language input fields project one project language add language list lookup preparation (get_language_lookup()) custom config fields add download_language_list() get current translations GitHub add ping-checks database-related functions supply custom error messages get_idaifield_docs() now remove Configuration doc attach attribute custom classes, thus simplify_idaifield() use config-attribute directly works without connection. simplify_idaifield() now allows keep checkbox-fields etc. -change idf_query() idf_index_query() return docs instead simplified list allow choice idaifield_...-lists now named (identifier resource) new demodata future use (data(\"idaifieldr_demodata\")) rewritten vignettes generally updated documentation Notice: changes may created problems iDAI.field 2, test using package iDAI.field 2, assume used anymore. get_idaifield_docs() still work.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/news/index.html","id":"idaifieldr-022-2023-02-18","dir":"Changelog","previous_headings":"","what":"idaifieldR 0.2.2 2023-02-18","title":"idaifieldR 0.2.2 2023-02-18","text":"config specific names now removed everywhere fixed problem -condition config exists fixed problem calculation means ranged measurements comments code places speed find_layer(), replace_uid() check_if_uid() tests","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/news/index.html","id":"idaifieldr-021-2022-10-23","dir":"Changelog","previous_headings":"","what":"idaifieldR 0.2.1 2022-10-23","title":"idaifieldR 0.2.1 2022-10-23","text":"Fixed find_layer() (internal), seems work intended now. editor project configuration iDAI.field 3, new fields objects started named according configurations, e.g. “milet:temperType” etc., fields newly created. now config specific names removed fields, part double dot remains (e.g. “milet:temperType” becomes “temperType”). check_if_uid() now handles vectors Speed get_uid_list(), replace_uid(), convert_to_onehot(), fix_relations() (lot) split import get_idaifield_docs() processing usable simplify_idaifield(), advice use latter subsets time manageable. add check_and_unnest() export","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/news/index.html","id":"idaifieldr-020-2022-05-15","dir":"Changelog","previous_headings":"","what":"idaifieldR 0.2.0 2022-05-15","title":"idaifieldR 0.2.0 2022-05-15","text":"Version number changed 0.2, reflect rather dramatic changes. Faster get_uid_list() using lapply() Added idf_query() specifically query db groups without first downloading everything Added idf_index_query() specifically query db things available uidlist (needs uidlist ) simplified = TRUE (simplify_idaifield()) now convert checkbox field multiple columns. probably make option future, need clean function first (TODO). make possible import configuration file (needed new functions; work idaifield3 , hopefully); connection projectname now attributes “idaifield_docs” “idaifield_resources” objects. idaifield_as_matrix() now returns matrix character values, lists Dimension lists imported single value - still stupid, actually, can’t currently think better way. Two Vignettes: Demo.Rmd essential workflow, .Rmd explaining bit . Demo.Rmd updated begin working . stated don’t intend structural changes, - apparently - impossible. Old scripts work without interference new version.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/news/index.html","id":"idaifieldr-014-2021-05-09","dir":"Changelog","previous_headings":"","what":"idaifieldR 0.1.4 2021-05-09","title":"idaifieldR 0.1.4 2021-05-09","text":"add version connect_idaifield()-function since options changed switch Field Desktop (iDAI.field 3) update documentation accordingly","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/news/index.html","id":"idaifieldr-013-2021-12-07","dir":"Changelog","previous_headings":"","what":"idaifieldR 0.1.3 2021-12-07","title":"idaifieldR 0.1.3 2021-12-07","text":"Updated docs Changes geometry reformatting accommodate 3D-data (available, set 0)","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/news/index.html","id":"idaifieldr-011-2021-04-13","dir":"Changelog","previous_headings":"","what":"idaifieldR 0.1.1 2021-04-13","title":"idaifieldR 0.1.1 2021-04-13","text":"First release. try limit future changes affect structural outcome core functions now. TODOs: * Find way handle remaining lists better, esp combination non-list columns. * Try assign column type automatically (numeric numbers etc.) * deal dimension…-fields (measurements)? Currently ignored, can flattened dplyr friends.","code":""},{"path":"https://lsteinmann.github.io/idaifieldR/news/index.html","id":"idaifieldr-010-2021-03-03","dir":"Changelog","previous_headings":"","what":"idaifieldR 0.1.0 2021-03-03","title":"idaifieldR 0.1.0 2021-03-03","text":"Added NEWS.md file track changes package. Basic functions work thoroughly tested","code":""}]
