% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simplify_idaifield_resources.R
\name{simplify_idaifield}
\alias{simplify_idaifield}
\title{Simplify a list imported from an iDAI.field-Database}
\usage{
simplify_idaifield(
  idaifield_docs,
  keep_geometry = FALSE,
  replace_uids = TRUE,
  uidlist = NULL,
  language = "all",
  spread_fields = TRUE,
  use_exact_dates = FALSE
)
}
\arguments{
\item{idaifield_docs}{An "idaifield_docs" or "idaifield_resources"-list as
returned by `get_idaifield_docs()` or `idf_query()` and `idf_index_query()`.}

\item{keep_geometry}{logical. (Defaults to FALSE) Should the geographical
information be kept or removed?}

\item{replace_uids}{logical. Should UUIDs be automatically replaced with the
corresponding identifiers? (Defaults to TRUE).}

\item{uidlist}{If NULL (default) the list of UUIDs and identifiers is
automatically generated within this function. This only makes sense if
the list handed to `simplify_idaifield()` had not been selected yet. If it
has been, you should supply a data.frame as returned by `get_uid_list()`.}

\item{language}{the short name (e.g. "en", "de", "fr") of the language that
is preferred for the multi-language input fields, defaults to keeping all
languages as sub-lists ("all").}

\item{spread_fields}{logical. (Defaults to TRUE) Should checkbox-fields be
spread across multiple lists to facilitate boolean-columns for each value
of a checkbox-field?}

\item{use_exact_dates}{TRUE/FALSE: Should the values from any "exact"
dates be used in case there are any? Default is FALSE.}
}
\value{
an "idaifield_simple" list
}
\description{
The function will take a list as returned by `get_idaifield_docs()` and
process it to make the list more useable. It will unnest a view lists,
including the dimension-lists and the period-list to provide single values
for later processing with `idaifield_as_matrix()`. If a connection to the
database can be established, the function will get the relevant project
configuration and convert custom checkboxes-fields to multiple lists,
each for every value from the respective valuelist, to make them more
accessible during the conversion with `idaifield_as_matrix()`. It will also
remove the custom configuration field names that are in use since
iDAI.field 3 / Field Desktop and consist of "projectname:fieldName". Only
the "projectname:"-part will be removed.
}
\details{
Please note: The function will need an Index (i.e. uidlist as provided
by `get_uid_list()`) of the complete project database to correctly replace
the UUIDs with their corresponding identifiers! Especially if a selected
list is passed to `simplify_idaifield()`, you need to supply the uidlist
of the complete project database as well.

Formatting of various lists: Dimension measurements as well as dating are
reformatted and might produce unexpected results.
For the dating, all begin and end values are evaluated and for each resource,
the minimum value from "begin" and maximum value from "end" is selected.
For the dimension-fields, if a ranged measurement was selected, a mean
will be returned.
}
\examples{
\dontrun{
connection <- connect_idaifield(serverip = "127.0.0.1",
user = "R", pwd = "hallo")
idaifield_docs <- get_idaifield_docs(connection = connection,
projectname = "rtest")

simpler_idaifield <- simplify_idaifield(idaifield_docs)
}
}
\seealso{
\code{\link{idf_sepdim}}, \code{\link{remove_config_names}},
\code{\link{gather_languages}}, \code{\link{fix_dating}},
\code{\link{convert_to_onehot}}
}
